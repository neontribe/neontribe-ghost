{"meta":{"exported_on":1434537834973,"version":"001"},"data":{"posts":[{"id":2,"uuid":"1d2b8696-1d6d-4275-af20-b3acc312840c","title":"So, you're about to switch the DNS","slug":"so-youre-about-to-switch-the-dns","markdown":"It's a common scenario: You've built a new website locally to replace an older one, tested it fully (with your automated testing framework of choice), and now you're deploying it to a spanking new server it's going to live on. You're editing your local \"hosts\" file to tell your browser to resolve the domain name to the IP address of its new server, and you find that everything is well.\n\nThe next step is to change the DNS, so that the domain name points to the new server in the wild. Here's where it can get tricky. If you need to change the nameservers of the domain, then you're stuck with having to wait for the change to propagate throughout the net, and explaining to your client that it could take anywhere from an hour to a day.\n\nOn the other hand, if you can edit the DNS zone file directly, your changes will be instantaneous - on the nameserver. But here's the problem: All these shiny DNS entries in the zone file have a time-to-live (TTL) value (in seconds), and it's likely quite high, perhaps around 4 hours (14,400 seconds). So when your user agent tries to reach the domain, gets punted to its nameserver, who tells it that the \"A\" record for the domain points at a given IP address, it also says that this information is good for a certain period of time.\n\nBeing a good user agent, it caches that lookup for the length of time given (let's say 4 hours for this example). This reduces the load on the nameservers, and really speeds up future requests. But you can see where this is going - we've edited the zone file, but let's say the user agent got that information a few minutes before the change, and now it's got the old information, which it will rely on for another 3 hours and fifty-something minutes. Let's also say the user was in fact the client, and they want to see their new site, but they keep seeing the old site on the old server, and they're getting antsy.\n\n##So what can we do?\n\nWell, firstly, we can flush our local DNS cache. Try these commands in your OS's terminal or command window.\n\n###OS X Mavericks\n\n\tdscacheutil -flushcache; sudo killall -HUP mDNSResponder\n\n###Windows 7 & 8\n\n    ipconfig /flushdns\n\n###Ubuntu\n\nWell, Ubuntu doesn't cache DNS lookups.\n\nHowever, sometimes flushing your local DNS cache is only half the story. Your ISP might cache the lookups too, for example, and you'll have a hard time getting Virgin Media or BT flushing their DNS caches for you.\n\n##A better approach\n\nThis one requires a little forward planning, but it should make your site migrations that much easier.\n\nHave a look at the current time-to-live for your DNS entries (and not just \"A\", check your \"CNAME\"s and \"MX\" records too if applicable), and then, at at least twice that length of time (to account for overzealous cachers; after all, the TTL is merely a suggestion) before going live, set them to a small duration, such as 5 minutes (300 seconds).\n\nPerhaps doing this the day before is easiest. Now you're telling all user agents who look up records that the information you're giving them is only good for 5 minutes, so they'll come back and check it on the first new request every five minutes, and presto, when you go live and change the DNS, the users will see the new site within 5 minutes.\n\nDon't forget to change the TTL back to its normal value shortly after you've changed the DNS to point at the new server. In fact, you could do it at the same time, since this new information is now supposed to be canonical. However, you might be better server leaving it for a little while, in case you run into any problems that require a rollback to the old server. In this case, the rollback would only take up to 5 minutes for individual users.\n\n##Any drawbacks or pitfalls?\n\nUnfortunately yes, there are two main gotchas with this technique. Firstly, you can never be fully sure that the DNS caches respect the TTLs they're given. Your ISP might set a default cache duration regardless, for example.\n\nSecondly, for the duration of the short TTLs, you're hammering your nameserver much more than usual. DNS lookups are cheap, and your host's nameservers should be up to the task (and indeed that's why you have at least two of them per domain name), but it's worth bearing in mind. You certainly don't want to forget resetting the TTLs.\n\nWith all that in mind, this is still a handy technique.\n","html":"<p>It's a common scenario: You've built a new website locally to replace an older one, tested it fully (with your automated testing framework of choice), and now you're deploying it to a spanking new server it's going to live on. You're editing your local \"hosts\" file to tell your browser to resolve the domain name to the IP address of its new server, and you find that everything is well.</p>\n\n<p>The next step is to change the DNS, so that the domain name points to the new server in the wild. Here's where it can get tricky. If you need to change the nameservers of the domain, then you're stuck with having to wait for the change to propagate throughout the net, and explaining to your client that it could take anywhere from an hour to a day.</p>\n\n<p>On the other hand, if you can edit the DNS zone file directly, your changes will be instantaneous - on the nameserver. But here's the problem: All these shiny DNS entries in the zone file have a time-to-live (TTL) value (in seconds), and it's likely quite high, perhaps around 4 hours (14,400 seconds). So when your user agent tries to reach the domain, gets punted to its nameserver, who tells it that the \"A\" record for the domain points at a given IP address, it also says that this information is good for a certain period of time.</p>\n\n<p>Being a good user agent, it caches that lookup for the length of time given (let's say 4 hours for this example). This reduces the load on the nameservers, and really speeds up future requests. But you can see where this is going - we've edited the zone file, but let's say the user agent got that information a few minutes before the change, and now it's got the old information, which it will rely on for another 3 hours and fifty-something minutes. Let's also say the user was in fact the client, and they want to see their new site, but they keep seeing the old site on the old server, and they're getting antsy.</p>\n\n<h2 id=\"sowhatcanwedo\">So what can we do?</h2>\n\n<p>Well, firstly, we can flush our local DNS cache. Try these commands in your OS's terminal or command window.</p>\n\n<h3 id=\"osxmavericks\">OS X Mavericks</h3>\n\n<pre><code>dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n</code></pre>\n\n<h3 id=\"windows78\">Windows 7 &amp; 8</h3>\n\n<pre><code>ipconfig /flushdns\n</code></pre>\n\n<h3 id=\"ubuntu\">Ubuntu</h3>\n\n<p>Well, Ubuntu doesn't cache DNS lookups.</p>\n\n<p>However, sometimes flushing your local DNS cache is only half the story. Your ISP might cache the lookups too, for example, and you'll have a hard time getting Virgin Media or BT flushing their DNS caches for you.</p>\n\n<h2 id=\"abetterapproach\">A better approach</h2>\n\n<p>This one requires a little forward planning, but it should make your site migrations that much easier.</p>\n\n<p>Have a look at the current time-to-live for your DNS entries (and not just \"A\", check your \"CNAME\"s and \"MX\" records too if applicable), and then, at at least twice that length of time (to account for overzealous cachers; after all, the TTL is merely a suggestion) before going live, set them to a small duration, such as 5 minutes (300 seconds).</p>\n\n<p>Perhaps doing this the day before is easiest. Now you're telling all user agents who look up records that the information you're giving them is only good for 5 minutes, so they'll come back and check it on the first new request every five minutes, and presto, when you go live and change the DNS, the users will see the new site within 5 minutes.</p>\n\n<p>Don't forget to change the TTL back to its normal value shortly after you've changed the DNS to point at the new server. In fact, you could do it at the same time, since this new information is now supposed to be canonical. However, you might be better server leaving it for a little while, in case you run into any problems that require a rollback to the old server. In this case, the rollback would only take up to 5 minutes for individual users.</p>\n\n<h2 id=\"anydrawbacksorpitfalls\">Any drawbacks or pitfalls?</h2>\n\n<p>Unfortunately yes, there are two main gotchas with this technique. Firstly, you can never be fully sure that the DNS caches respect the TTLs they're given. Your ISP might set a default cache duration regardless, for example.</p>\n\n<p>Secondly, for the duration of the short TTLs, you're hammering your nameserver much more than usual. DNS lookups are cheap, and your host's nameservers should be up to the task (and indeed that's why you have at least two of them per domain name), but it's worth bearing in mind. You certainly don't want to forget resetting the TTLs.</p>\n\n<p>With all that in mind, this is still a handy technique.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389698685422,"created_by":1,"updated_at":1389698685422,"updated_by":1,"published_at":1389698685443,"published_by":1},{"id":3,"uuid":"fccded1f-3854-413a-a136-dabd35f20276","title":"The People Of Neontribe","slug":"the-people-of-neontribe","markdown":"We are a small group of programmers, designers, writers, speakers and evangelists of The Open Web.\n\n<div class=\"collapsible\">\n<section>\n\t\t\t\t\t\t\t<h2>Harry Harrold <img src=\"/content/images/2014/Jan/harry.jpg\" alt=\"\"/></h2>\n\t\t\t\t\t\t\t<p>Interaction design and marketing</p>\n\t\t\t\t\t\t\t<p>Harry is a fifteen year veteran marketing professional, who has worked in a wide variety of sectors and sizes of organisation. After helping take an Internet security start up from 3 employees to acquisition by Sun Microsystems, he worked firstly in their global trade finance team, then in product marketing for their meta-directory product. Since leaving software marketing, he’s been helping organisations define how they use the Internet, mainly in the education and charity sectors, and managing the resulting projects.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Marketing, planning and strategy</li>\n\t\t\t\t\t\t\t\t<li>Social media</li>\n\t\t\t\t\t\t\t\t<li>User-centered design</li>\n\t\t\t\t\t\t\t\t<li>Software requirement gathering and specification process</li>\n\t\t\t\t\t\t\t\t<li>Project management</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Food and drink, specifically the beers of Timothy Taylor, offal in all its many and varied forms, pork scratchings, military history, environmental issues, and improvisational theatre.</p>\n</section>\n<section>\n\t\t\t\t\t\t\t<h2>Rupert Redington <img src=\"/content/images/2014/Jan/rupert.jpg\" alt=\"\"/></h2>\n                            \n<p>Strategy &amp; Inspiration </p>\n\t\t\t\t\t\t\t<p>Rupert began working with the Internet and open source technology in 1998, bringing skills from previous careers in theatre and education. Since then he’s built applications and devised strategies for a wide range of client organisations – usually with an emphasis on supporting educational initiatives and building communities. An abiding interest in the social aspects of Internet usage and a willingness to theorise informs his thinking and leads our development as an organisation.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Software specification and design</li>\n\t\t\t\t\t\t\t\t<li>Application programming in Python</li>\n\t\t\t\t\t\t\t\t<li>Linux system administration</li>\n\t\t\t\t\t\t\t\t<li>Presentation layer coding in Javascript, HTML and CSS</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Open source software philosophy and advocacy, racing Norfolk Punts, building puppets, and cooking.</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2>Neil Dabson <img src=\"/content/images/2014/Jan/neil.jpg\" alt=\"\"/></h2>\n                            \n\t\t\t\t\t\t\t<p>Coding &amp; Deployment</p>\n\t\t\t\t\t\t\t<p>Neil’s degree in geophysics led to initially a career in the oil industry. After too many trips to out of the way places, he left in favour of resurrecting a deep interest in technology. For the last ten years he’s been involved in a wide variety of IT projects, focussing on open source software development and deployment.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Software specification</li>\n\t\t\t\t\t\t\t\t<li>Application programming in Python</li>\n\t\t\t\t\t\t\t\t<li>Linux system administration</li>\n\t\t\t\t\t\t\t\t<li>Database design and administration</li>\n\t\t\t\t\t\t\t\t<li>Internet presentation layer coding in Javascript, <span class=\"caps\">HTML</span> and <span class=\"caps\">CSS</span></li>\n\t\t\t\t\t\t\t\t<li>Server-side scripting in Shell and Perl</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Gaming, vile liquers from around the world, cross-country pantomime.</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2>Toby Batch <img src=\"/content/images/2014/Jan/toby.jpg\" alt=\"\"/></h2>\n                            \n\t\t\t\t\t\t\t<p>Coding &amp; Deployment</p>\n\t\t\t\t\t\t\t<p>Toby trained in computer science and psychology, and has been working on Internet projects since 1996. He authored the first Java strong cryptographic implementation outside the USA. After helping take an Internet security start up from 3 employees to acquisition by Sun Microsystems, he worked in global professional services for 3 years before leaving for self-employment. As well as working for Neontribe, he teaches web design part-time at Anglia Polytechnic Universtity.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Application programming in Java and Python</li>\n\t\t\t\t\t\t\t\t<li>Unix system administration, Linux and Solaris</li>\n\t\t\t\t\t\t\t\t<li>Internet presentation layer coding in <span class=\"caps\">PHP</span>, Javascript, <span class=\"caps\">HTML</span> and <span class=\"caps\">CSS</span></li>\n\t\t\t\t\t\t\t\t<li>Server-side scripting in Shell, <span class=\"caps\">JSP</span>, <span class=\"caps\">ASP</span>, and Perl<br>\n\t\t\t\t\t\tInternet security programming – Public Key Infrastructure (<span class=\"caps\">PKI</span>), On-line</li>\n\t\t\t\t\t\t\t\t<li>Certificate Status Protocol (<span class=\"caps\">OCSP</span>), Secure Socket Layer (<span class=\"caps\">SSL</span>) and Transport Layer Security (<span class=\"caps\">TLS</span>) Client Server Architectures.</li>\n\t\t\t\t\t\t\t\t<li>Database administration for MySQL</li>\n\t\t\t\t\t\t\t\t<li>IT teaching and training</li>\n\t\t\t\t\t\t\t\t<li>Carrying heavy weights</li>\n\t\t\t\t\t\t\t\t<li>Conflict resolution</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Rugby union, childcare, the various sub-genres of heavy metal music, and poor quality science fiction films of the 1970s.</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2>Heydon Pickering <img src=\"/content/images/2014/Jan/heydon.jpg\" alt=\"\"/></h2>\n                            \n\t\t\t\t\t\t\t<p>Design</p>\n\t\t\t\t\t\t\t<p>Heydon went to university in the salubrious Hatfield where he intended to study art and things but ended up helping to form a fake marketing agency and posed as his own degree show’s corporate sponsor. At his first job he hoped to learn web design but spent much of his time in a small room photographing ladies’ halter tops. Later, he discovered <span class=\"caps\">CSS</span> and cut his teeth coding e-commerce sites for the Guardian and Telegraph. He has written about web typography for <a href=\"http://uxdesign.smashingmagazine.com/author/heydon-pickering\">Smashing Magazine</a> and his blog is called <a href=\"http://www.heydonworks.com\">HeydonWorks</a>.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>HTML5</li>\n\t\t\t\t\t\t\t\t<li>CSS</li>\n\t\t\t\t\t\t\t\t<li>Web Typography</li>\n\t\t\t\t\t\t\t\t<li>Writing</li>\n\t\t\t\t\t\t\t\t<li>WAI-ARIA</li>\n\t\t\t\t\t\t\t\t<li>Vector illustration</li>\n\t\t\t\t\t\t\t\t<li>Saying no</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Punky blues music, skiing, sea life.</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2>Matt Layton <img src=\"/content/images/2014/Jan/matt.jpg\" alt=\"\"/></h2>\n                            \n\t\t\t\t\t\t\t<p>Design &amp; Programming</p>\n\t\t\t\t\t\t\t<p>Matt comes from a Game Development background but he’s also a precociously brilliant front-end developer. He came to us on a placement from Derby University and has become an invaluable team member. We even sent him to Vegas for a couple of weeks! His portfolio and blog are found at <a href=\"http://mattlayton.co.uk\">mattlayton.co.uk</a>.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li><span class=\"caps\">PHP</span></li>\n\t\t\t\t\t\t\t\t<li><span class=\"caps\">HTML</span>/CSS</li>\n\t\t\t\t\t\t\t\t<li>Drupal</li>\n\t\t\t\t\t\t\t\t<li>UnrealScript</li>\n\t\t\t\t\t\t\t\t<li>C / C# / C++</li>\n\t\t\t\t\t\t\t\t<li><span class=\"caps\">MIPS</span> Assembly</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Sketching (portraiture)</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2>Katja Mordaunt <img src=\"/content/images/2014/Jan/katja.jpg\" alt=\"\"/></h2>\n                            \n\t\t\t\t\t\t\t<p>PHP Prototyper / Blog designer</p>\n\t\t\t\t\t\t\t<p>Made the mistake of believing that a science based education meant forgoing creativity and has been forging an uphill battle out of the ‘arts’ towards her childhood ambition of becoming a creative technician. Having the belief that the TV/Film industry will one day merge with the computer/internet world, she has planted a foot firmly in each camp (in the hope of taking over the world – or perhaps saving it). She occupies her spare time, with producing TV series’ about musical theatre (for no other reason than that she can and has been asked to). And is eking towards completion an OU degree in computer science.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Wordpress</li>\n\t\t\t\t\t\t\t\t<li>Drupal</li>\n\t\t\t\t\t\t\t\t<li>can usually decipher php, Java, python, <span class=\"caps\">HTML</span> and <span class=\"caps\">CSS</span></li>\n\t\t\t\t\t\t\t\t<li>saying ‘Yes, I can do that.’</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Would like to have a cunning plan to retire by the age of 45 and sail around the world a few times with her husband, meeting up with her children at random intervals, and writing a novel or 2 whilst filming a ground-breaking documentary about the social ails of the world.</p>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2>Frank Reding <img src=\"/content/images/2014/Jan/frank.jpg\" alt=\"\"/></h2>\n                            \n\t\t\t\t\t\t\t<p>Designer &amp; Programmer</p>\n\t\t\t\t\t\t\t<p>When Frank got a copy of Purple Saturn Day for his Amstrad CPC as a young boy, he saw what could be achieved even within extremely limited contraints, and began creating his own games. Later, his attention turned to the web, despite his best attempts at going down a more literary route. Passionate (and pedantic) about both back- and front-end design and development, he now has a positively rude number of web projects under his belt. Still he continues to hunt for new, exciting technologies, better user experiences, and interesting tea flavours.</p>\n\t\t\t\t\t\t\t<h3>Key skills</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Application development in Javascript and PHP</li>\n\t\t\t\t\t\t\t\t<li>Structured Markup, CSS, Typography, Graphic Design</li>\n\t\t\t\t\t\t\t\t<li>Database architecture</li>\n\t\t\t\t\t\t\t\t<li>Digital media platforms</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h3>Interests</h3>\n\t\t\t\t\t\t\t<p>Photography and videography, writing, recording, and listening to music, gaming, the demo scene, day-dreaming about replacing his home with a mini-castle.</p>\n\t\t\t\t\t\t</section>\n<section>\n<h2>Karl Jermy <img src=\"/content/images/2014/Jan/karl.jpg\" alt=\"\"/>\n</h2>\n<p>People and project management</p>\n<h3>Biography</h3>\n\n<p>A wearer of many hats, literally, Karl came to Neontribe in 2013 after a period of rest from a fifteen year spell at one of the world's brokest Banks. He initially started his IT career in November 1996 within the call centre of Richard Branson’s Virgin Direct before moving to a testing role and proceeded to work his way through the ranks to the dizzy heights of Test Manager with the then Virgin One Account.</p>\n\n<p>After a number of re-organisational moves within the wider area of the bank, found himself in a service delivery manager role, juggling a wide variety of teams and projects across the broader spectrum of the bank, from Edinburgh to Mumbai and back again. Eventually they caught up with him and he was allowed to leave in Sept 2011.</p>\n\n<p>Refreshed and liberated, he has embraced the Neontribe work ethic (even growing a moustache) and has been tasked with bringing a level of structure and project management into the team whilst maintaining the fun in delivering brilliant projects.</p>\n\n<h3>Key skills</h3>\n\n<ul>\n<li>People management</li>\n<li>Project management</li>\n<li>Test management</li>\n<li>Anything else Harry doesn't want to do</li>\n</ul>\n\n<h3>Interests</h3>\n\n<p>Roast duck and rioja, champagne tasting at sunrise, Ian Fraser Kilmister, hand made Italian leather boots, the Canaries and blue skies.</p>\n\n</section>\n<section>\n<h2>Cat Wilkinson <img src=\"/content/images/2014/Jan/cat.jpg\" alt=\"\"/></h2>\n<p>Programming</p>\n<p>Cat rejected the family tradition of becoming a teacher, and broke out from a high school background of Literature and biology to pursue a degree in Computer Science. Originally, the plan was to be a games designer and developer, to reunite the worlds of arts and science, but the maths-heavy and highly competitive world of graphics lost its appeal quickly. Cat's 3<sup>rd</sup> year project for her degree was a prototype mobile phone application for tracking mood. She graduated from the University of East Anglia in 2013 with a 2:1 in Computer Science.</p>\n<h3>Key skills</h3>\n<ul>\n<li>Drupal</li>\n<li>PHP</li>\n<li>Javascript</li>\n<li>Java</li>\n<li>Inventing things</li>\n</ul>\n\n<h3>Interests</h3>\n\n<p>Computing projects aimed at improving quality of life, amusing captioned animal pictures, Minecraft, \nbaking.</p>\n</section>\n<section>\n<h2>Andy Barnes <img src=\"/content/images/2014/Jan/andy.jpg\" alt=\"\"/></h2>\n<p>System Administration & Deployment</p>\n<p>Andy came to Neontribe at the beginning of 2012 with over 10 years of UNIX administration experience and 18 years in the industry.</p>\n<h3>Key Skills</h3>\n<ul>\n<li>UNIX system administration, Linux and Solaris</li>\n<li>Windows system administration</li>\n<li>Database administration</li>\n<li>Network administration</li>\n<li>Apache administration</li>\n<li>Shell scripting</li>\n<li>Administration</li>\n<li>Telling people on the internet they are doing it wrong</li>\n</ul>\n<h3>Interests</h3>\n<p>Computer Gaming, Fiction, Films, Poker, F1, LARP, Tabletop Gaming, Open Source</p>\n</section>\n</div>","html":"<p>We are a small group of programmers, designers, writers, speakers and evangelists of The Open Web.</p>\n\n<div class=\"collapsible\">  \n<section>  \n                            <h2>Harry Harrold <img src=\"/content/images/2014/Jan/harry.jpg\" alt=\"\"/></h2>\n                            <p>Interaction design and marketing</p>\n                            <p>Harry is a fifteen year veteran marketing professional, who has worked in a wide variety of sectors and sizes of organisation. After helping take an Internet security start up from 3 employees to acquisition by Sun Microsystems, he worked firstly in their global trade finance team, then in product marketing for their meta-directory product. Since leaving software marketing, he’s been helping organisations define how they use the Internet, mainly in the education and charity sectors, and managing the resulting projects.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li>Marketing, planning and strategy</li>\n                                <li>Social media</li>\n                                <li>User-centered design</li>\n                                <li>Software requirement gathering and specification process</li>\n                                <li>Project management</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Food and drink, specifically the beers of Timothy Taylor, offal in all its many and varied forms, pork scratchings, military history, environmental issues, and improvisational theatre.</p>\n</section>  \n<section>  \n                            <h2>Rupert Redington <img src=\"/content/images/2014/Jan/rupert.jpg\" alt=\"\"/></h2>\n\n<p>Strategy &amp; Inspiration </p>  \n                            <p>Rupert began working with the Internet and open source technology in 1998, bringing skills from previous careers in theatre and education. Since then he’s built applications and devised strategies for a wide range of client organisations – usually with an emphasis on supporting educational initiatives and building communities. An abiding interest in the social aspects of Internet usage and a willingness to theorise informs his thinking and leads our development as an organisation.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li>Software specification and design</li>\n                                <li>Application programming in Python</li>\n                                <li>Linux system administration</li>\n                                <li>Presentation layer coding in Javascript, HTML and CSS</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Open source software philosophy and advocacy, racing Norfolk Punts, building puppets, and cooking.</p>\n                        </section>\n                        <section>\n                            <h2>Neil Dabson <img src=\"/content/images/2014/Jan/neil.jpg\" alt=\"\"/></h2>\n\n                            <p>Coding &amp; Deployment</p>\n                            <p>Neil’s degree in geophysics led to initially a career in the oil industry. After too many trips to out of the way places, he left in favour of resurrecting a deep interest in technology. For the last ten years he’s been involved in a wide variety of IT projects, focussing on open source software development and deployment.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li>Software specification</li>\n                                <li>Application programming in Python</li>\n                                <li>Linux system administration</li>\n                                <li>Database design and administration</li>\n                                <li>Internet presentation layer coding in Javascript, <span class=\"caps\">HTML</span> and <span class=\"caps\">CSS</span></li>\n                                <li>Server-side scripting in Shell and Perl</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Gaming, vile liquers from around the world, cross-country pantomime.</p>\n                        </section>\n                        <section>\n                            <h2>Toby Batch <img src=\"/content/images/2014/Jan/toby.jpg\" alt=\"\"/></h2>\n\n                            <p>Coding &amp; Deployment</p>\n                            <p>Toby trained in computer science and psychology, and has been working on Internet projects since 1996. He authored the first Java strong cryptographic implementation outside the USA. After helping take an Internet security start up from 3 employees to acquisition by Sun Microsystems, he worked in global professional services for 3 years before leaving for self-employment. As well as working for Neontribe, he teaches web design part-time at Anglia Polytechnic Universtity.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li>Application programming in Java and Python</li>\n                                <li>Unix system administration, Linux and Solaris</li>\n                                <li>Internet presentation layer coding in <span class=\"caps\">PHP</span>, Javascript, <span class=\"caps\">HTML</span> and <span class=\"caps\">CSS</span></li>\n                                <li>Server-side scripting in Shell, <span class=\"caps\">JSP</span>, <span class=\"caps\">ASP</span>, and Perl<br>\n                        Internet security programming – Public Key Infrastructure (<span class=\"caps\">PKI</span>), On-line</li>\n                                <li>Certificate Status Protocol (<span class=\"caps\">OCSP</span>), Secure Socket Layer (<span class=\"caps\">SSL</span>) and Transport Layer Security (<span class=\"caps\">TLS</span>) Client Server Architectures.</li>\n                                <li>Database administration for MySQL</li>\n                                <li>IT teaching and training</li>\n                                <li>Carrying heavy weights</li>\n                                <li>Conflict resolution</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Rugby union, childcare, the various sub-genres of heavy metal music, and poor quality science fiction films of the 1970s.</p>\n                        </section>\n                        <section>\n                            <h2>Heydon Pickering <img src=\"/content/images/2014/Jan/heydon.jpg\" alt=\"\"/></h2>\n\n                            <p>Design</p>\n                            <p>Heydon went to university in the salubrious Hatfield where he intended to study art and things but ended up helping to form a fake marketing agency and posed as his own degree show’s corporate sponsor. At his first job he hoped to learn web design but spent much of his time in a small room photographing ladies’ halter tops. Later, he discovered <span class=\"caps\">CSS</span> and cut his teeth coding e-commerce sites for the Guardian and Telegraph. He has written about web typography for <a href=\"http://uxdesign.smashingmagazine.com/author/heydon-pickering\">Smashing Magazine</a> and his blog is called <a href=\"http://www.heydonworks.com\">HeydonWorks</a>.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li>HTML5</li>\n                                <li>CSS</li>\n                                <li>Web Typography</li>\n                                <li>Writing</li>\n                                <li>WAI-ARIA</li>\n                                <li>Vector illustration</li>\n                                <li>Saying no</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Punky blues music, skiing, sea life.</p>\n                        </section>\n                        <section>\n                            <h2>Matt Layton <img src=\"/content/images/2014/Jan/matt.jpg\" alt=\"\"/></h2>\n\n                            <p>Design &amp; Programming</p>\n                            <p>Matt comes from a Game Development background but he’s also a precociously brilliant front-end developer. He came to us on a placement from Derby University and has become an invaluable team member. We even sent him to Vegas for a couple of weeks! His portfolio and blog are found at <a href=\"http://mattlayton.co.uk\">mattlayton.co.uk</a>.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li><span class=\"caps\">PHP</span></li>\n                                <li><span class=\"caps\">HTML</span>/CSS</li>\n                                <li>Drupal</li>\n                                <li>UnrealScript</li>\n                                <li>C / C# / C++</li>\n                                <li><span class=\"caps\">MIPS</span> Assembly</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Sketching (portraiture)</p>\n                        </section>\n                        <section>\n                            <h2>Katja Mordaunt <img src=\"/content/images/2014/Jan/katja.jpg\" alt=\"\"/></h2>\n\n                            <p>PHP Prototyper / Blog designer</p>\n                            <p>Made the mistake of believing that a science based education meant forgoing creativity and has been forging an uphill battle out of the ‘arts’ towards her childhood ambition of becoming a creative technician. Having the belief that the TV/Film industry will one day merge with the computer/internet world, she has planted a foot firmly in each camp (in the hope of taking over the world – or perhaps saving it). She occupies her spare time, with producing TV series’ about musical theatre (for no other reason than that she can and has been asked to). And is eking towards completion an OU degree in computer science.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li>Wordpress</li>\n                                <li>Drupal</li>\n                                <li>can usually decipher php, Java, python, <span class=\"caps\">HTML</span> and <span class=\"caps\">CSS</span></li>\n                                <li>saying ‘Yes, I can do that.’</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Would like to have a cunning plan to retire by the age of 45 and sail around the world a few times with her husband, meeting up with her children at random intervals, and writing a novel or 2 whilst filming a ground-breaking documentary about the social ails of the world.</p>\n                        </section>\n                        <section>\n                            <h2>Frank Reding <img src=\"/content/images/2014/Jan/frank.jpg\" alt=\"\"/></h2>\n\n                            <p>Designer &amp; Programmer</p>\n                            <p>When Frank got a copy of Purple Saturn Day for his Amstrad CPC as a young boy, he saw what could be achieved even within extremely limited contraints, and began creating his own games. Later, his attention turned to the web, despite his best attempts at going down a more literary route. Passionate (and pedantic) about both back- and front-end design and development, he now has a positively rude number of web projects under his belt. Still he continues to hunt for new, exciting technologies, better user experiences, and interesting tea flavours.</p>\n                            <h3>Key skills</h3>\n                            <ul>\n                                <li>Application development in Javascript and PHP</li>\n                                <li>Structured Markup, CSS, Typography, Graphic Design</li>\n                                <li>Database architecture</li>\n                                <li>Digital media platforms</li>\n                            </ul>\n                            <h3>Interests</h3>\n                            <p>Photography and videography, writing, recording, and listening to music, gaming, the demo scene, day-dreaming about replacing his home with a mini-castle.</p>\n                        </section>\n<section>  \n<h2>Karl Jermy <img src=\"/content/images/2014/Jan/karl.jpg\" alt=\"\"/>  \n</h2>  \n<p>People and project management</p>  \n<h3>Biography</h3>\n\n<p>A wearer of many hats, literally, Karl came to Neontribe in 2013 after a period of rest from a fifteen year spell at one of the world's brokest Banks. He initially started his IT career in November 1996 within the call centre of Richard Branson’s Virgin Direct before moving to a testing role and proceeded to work his way through the ranks to the dizzy heights of Test Manager with the then Virgin One Account.</p>\n\n<p>After a number of re-organisational moves within the wider area of the bank, found himself in a service delivery manager role, juggling a wide variety of teams and projects across the broader spectrum of the bank, from Edinburgh to Mumbai and back again. Eventually they caught up with him and he was allowed to leave in Sept 2011.</p>\n\n<p>Refreshed and liberated, he has embraced the Neontribe work ethic (even growing a moustache) and has been tasked with bringing a level of structure and project management into the team whilst maintaining the fun in delivering brilliant projects.</p>\n\n<h3>Key skills</h3>\n\n<ul>  \n<li>People management</li>  \n<li>Project management</li>  \n<li>Test management</li>  \n<li>Anything else Harry doesn't want to do</li>  \n</ul>\n\n<h3>Interests</h3>\n\n<p>Roast duck and rioja, champagne tasting at sunrise, Ian Fraser Kilmister, hand made Italian leather boots, the Canaries and blue skies.</p>\n\n</section>  \n<section>  \n<h2>Cat Wilkinson <img src=\"/content/images/2014/Jan/cat.jpg\" alt=\"\"/></h2>  \n<p>Programming</p>  \n<p>Cat rejected the family tradition of becoming a teacher, and broke out from a high school background of Literature and biology to pursue a degree in Computer Science. Originally, the plan was to be a games designer and developer, to reunite the worlds of arts and science, but the maths-heavy and highly competitive world of graphics lost its appeal quickly. Cat's 3<sup>rd</sup> year project for her degree was a prototype mobile phone application for tracking mood. She graduated from the University of East Anglia in 2013 with a 2:1 in Computer Science.</p>  \n<h3>Key skills</h3>  \n<ul>  \n<li>Drupal</li>  \n<li>PHP</li>  \n<li>Javascript</li>  \n<li>Java</li>  \n<li>Inventing things</li>  \n</ul>\n\n<h3>Interests</h3>\n\n<p>Computing projects aimed at improving quality of life, amusing captioned animal pictures, Minecraft,  \nbaking.</p>  \n</section>  \n<section>  \n<h2>Andy Barnes <img src=\"/content/images/2014/Jan/andy.jpg\" alt=\"\"/></h2>  \n<p>System Administration & Deployment</p>  \n<p>Andy came to Neontribe at the beginning of 2012 with over 10 years of UNIX administration experience and 18 years in the industry.</p>  \n<h3>Key Skills</h3>  \n<ul>  \n<li>UNIX system administration, Linux and Solaris</li>  \n<li>Windows system administration</li>  \n<li>Database administration</li>  \n<li>Network administration</li>  \n<li>Apache administration</li>  \n<li>Shell scripting</li>  \n<li>Administration</li>  \n<li>Telling people on the internet they are doing it wrong</li>  \n</ul>  \n<h3>Interests</h3>  \n<p>Computer Gaming, Fiction, Films, Poker, F1, LARP, Tabletop Gaming, Open Source</p>  \n</section>  \n</div>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389699179658,"created_by":1,"updated_at":1391167341817,"updated_by":1,"published_at":1389699179676,"published_by":1},{"id":4,"uuid":"bc6cbef6-3bd5-4ad6-866c-68450a9fea92","title":"Our Process","slug":"our-process","markdown":"<p style=\"font-size: 1em; border:0; padding: 0\">Our process is <a href=\"http://sixrevisions.com/web-development/agile/\">agile</a> and <a href=\"https://www.gov.uk/service-manual/user-centered-design/user-centered-design-alpha-beta.html\">user centered</a>. Divided into three stages &mdash; <strong>Discovery</strong>, <strong>Development</strong>, <strong>Delivery</strong> (see below) &mdash; it is designed to ensure money and time is not wasted during development.</p>\n\n<p>You can join us at <strong>Development</strong>, but we'd prefer to collaborate on your <strong>Discovery</strong> process if possible.</p>\n\n<div class=\"process\">\n<div class=\"big-blob-container\">\n\t\t\t\t\t<div class=\"big-blob  blob-discovery\">\n\t\t\t\t\t\t<h3><a href=\"/thinking-about-discovery\">Discovery</a></h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li><a href=\"#personas\">Personas</a></li><!--\n\t\t\t\t\t\t\t--><li><a href=\"#user-stories\">User stories</a></li><!--\n\t\t\t\t\t\t\t--><li><a href=\"#prototyping\">Prototyping</a></li><!--\n\t\t\t\t\t\t\t--><li><a href=\"#prioritisation\">Prioritisation</a></li>\n\t\t\t\t\t\t</ul>\n                        <p>Discovery starts with people and objectives.</p>\n                        <p>First, we work with you to understand your organisation's objectives.</p>\n                        <p id=\"personas\">We create some personas: People who might use the thing we're making.</p>\n                        <p id=\"user-stories\">We think about what these personas want to achieve with this thing.</p>\n                        <p id=\"prototyping\">We build an interactive prototype in paper.</p>\n                        <p id=\"prioritisation\">After testing the prototype with users, we prioritise work.</p>\n\t\t\t\t\t\t<div class=\"activity-container\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"divider\"></div>\n\t\t\t\t<div class=\"big-blob-container\">\n\t\t\t\t\t<div class=\"big-blob blob-development\">\n\t\t\t\t\t\t<h3><a href=\"/our-process-development\">Development</a></h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li><a href=\"#\">Coding</a></li><!--\n\t\t\t\t\t\t\t--><li><a href=\"#\">Testing</a></li><!--\n\t\t\t\t\t\t\t--><li><a href=\"#\">Visual design</a></li>\n\t\t\t\t\t\t</ul>\n                        <p>Our instinct is for agile and iterative development.</p>\n<p id=\"coding\">The prototype is made manifest in HTML, javascript, sometimes PHP &amp; Python.</p>\n                        <p id=\"testing\">Automated tests are run and users enlisted to break the nascent product.</p>\n                        <p id=\"visual-design\">From style guide to interface, a responsive visual design evolves.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"divider\"></div>\n\t\t\t\t<div class=\"big-blob-container\">\n\t\t\t\t\t<div class=\"big-blob blob-delivery\">\n\t\t\t\t\t\t<h3><a href=\"/our-process-delivery\">Delivery</a></h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li><a href=\"#\">Launch</a></li><!--\n\t\t\t\t\t\t\t--><li><a href=\"#\">Measurement</a></li><!--\n\t\t\t\t\t\t\t--><li><a href=\"#\">Improvement</a></li>\n\t\t\t\t\t\t</ul>\n                        <p>Delivery is not the end of a project.</p>\n                        <p id=\"launch\">It's time to release the alpha and see how it gets on.</p>\n                        <p id=\"measurement\">We keep an eye on its performance and watch to see what works.</p>\n                        <p id=\"improvement\">Then it's back to &#x201c;Development&#x201d; with new user data.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n</div>","html":"<p style=\"font-size: 1em; border:0; padding: 0\">Our process is <a href=\"http://sixrevisions.com/web-development/agile/\">agile</a> and <a href=\"https://www.gov.uk/service-manual/user-centered-design/user-centered-design-alpha-beta.html\">user centered</a>. Divided into three stages &mdash; <strong>Discovery</strong>, <strong>Development</strong>, <strong>Delivery</strong> (see below) &mdash; it is designed to ensure money and time is not wasted during development.</p>\n\n<p>You can join us at <strong>Development</strong>, but we'd prefer to collaborate on your <strong>Discovery</strong> process if possible.</p>\n\n<div class=\"process\">  \n<div class=\"big-blob-container\">  \n                    <div class=\"big-blob  blob-discovery\">\n                        <h3><a href=\"/thinking-about-discovery\">Discovery</a></h3>\n                        <ul>\n                            <li><a href=\"#personas\">Personas</a></li><!--\n                            --><li><a href=\"#user-stories\">User stories</a></li><!--\n                            --><li><a href=\"#prototyping\">Prototyping</a></li><!--\n                            --><li><a href=\"#prioritisation\">Prioritisation</a></li>\n                        </ul>\n                        <p>Discovery starts with people and objectives.</p>\n                        <p>First, we work with you to understand your organisation's objectives.</p>\n                        <p id=\"personas\">We create some personas: People who might use the thing we're making.</p>\n                        <p id=\"user-stories\">We think about what these personas want to achieve with this thing.</p>\n                        <p id=\"prototyping\">We build an interactive prototype in paper.</p>\n                        <p id=\"prioritisation\">After testing the prototype with users, we prioritise work.</p>\n                        <div class=\"activity-container\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"divider\"></div>\n                <div class=\"big-blob-container\">\n                    <div class=\"big-blob blob-development\">\n                        <h3><a href=\"/our-process-development\">Development</a></h3>\n                        <ul>\n                            <li><a href=\"#\">Coding</a></li><!--\n                            --><li><a href=\"#\">Testing</a></li><!--\n                            --><li><a href=\"#\">Visual design</a></li>\n                        </ul>\n                        <p>Our instinct is for agile and iterative development.</p>\n<p id=\"coding\">The prototype is made manifest in HTML, javascript, sometimes PHP &amp; Python.</p>  \n                        <p id=\"testing\">Automated tests are run and users enlisted to break the nascent product.</p>\n                        <p id=\"visual-design\">From style guide to interface, a responsive visual design evolves.</p>\n                    </div>\n                </div>\n                <div class=\"divider\"></div>\n                <div class=\"big-blob-container\">\n                    <div class=\"big-blob blob-delivery\">\n                        <h3><a href=\"/our-process-delivery\">Delivery</a></h3>\n                        <ul>\n                            <li><a href=\"#\">Launch</a></li><!--\n                            --><li><a href=\"#\">Measurement</a></li><!--\n                            --><li><a href=\"#\">Improvement</a></li>\n                        </ul>\n                        <p>Delivery is not the end of a project.</p>\n                        <p id=\"launch\">It's time to release the alpha and see how it gets on.</p>\n                        <p id=\"measurement\">We keep an eye on its performance and watch to see what works.</p>\n                        <p id=\"improvement\">Then it's back to &#x201c;Development&#x201d; with new user data.</p>\n                    </div>\n                </div>\n</div>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389701297881,"created_by":1,"updated_at":1408545050118,"updated_by":1,"published_at":1389701297888,"published_by":1},{"id":5,"uuid":"a440e569-36e1-4372-b9fd-c4a3194454d2","title":"We’re not designers. Except we are.","slug":"we're-not-designers-except-we-are","markdown":"At Neontribe, we often say we aren’t web designers. In a way we’re right, because we don’t lead projects with visual design. But that doesn’t credit the importance of design in what we do. We view design as a problem-solving exercise, and function rather than form is our problem domain. Our problems are not “Make this static collection of text and images into a beautiful page!”, but “Make this interaction delightful.” Our work doesn’t end up static. Even the simplest web site is an interaction. What we aim to do is focus on the process that the web property is implementing, whether that is a booking path, or a form designed to help structure someone’s thoughts. Or, even, presenting a set of text and images as a web site. \n\nWhen our projects go best, they start with an understanding of people and objectives. This is part of our discovery phase: a short period at the beginning of the project where we get to grips with the people who will use something we’re building, and the objectives of the organisation we’re working with. We deliver this knowledge as user stories, short sentences which enable us to check what we deliver is the right things, in the right order. Our design is about turning these stories into a piece of code that functions beautifully.\n\nThat might mean working on the categorisation and collation of text and images to present a message or communicate some information. For that, we’d start with post- it notes representing that information in sections. We’d move those sections round, test how the information was organised with the kinds of people who’d actually consume it. We’d rearrange until we were happy with how the content worked for them, and achieved its objective for the people who we were working for. Maybe we’d need to commission some more text or images, maybe we wouldn’t. Mostly we’d re- organise it. Starting our work with content in this way means that we don’t end up with a visual design dictates what text and images are required.\n\nOr, more often, it means implementing a more complex interaction, again starting by understanding people and objectives. We believe in articulating this understanding as a series of user stories which speak to people and their feelings about the interaction. We prototype a response to these stories, so we can get testing our design early, and we prioritise the stories we’ll implement depending on the importance of the objectives they achieve. Our design here is to solve the equation of what is required and what is possible within budget in the most elegant way, balancing people and objectives.\n\nWe’ve found the greater the focus on visual appearance at this stage, the more the requirements of content and interaction are obscured. It’s these design problems we concentrate on solving, and that’s how we’re designers.","html":"<p>At Neontribe, we often say we aren’t web designers. In a way we’re right, because we don’t lead projects with visual design. But that doesn’t credit the importance of design in what we do. We view design as a problem-solving exercise, and function rather than form is our problem domain. Our problems are not “Make this static collection of text and images into a beautiful page!”, but “Make this interaction delightful.” Our work doesn’t end up static. Even the simplest web site is an interaction. What we aim to do is focus on the process that the web property is implementing, whether that is a booking path, or a form designed to help structure someone’s thoughts. Or, even, presenting a set of text and images as a web site. </p>\n\n<p>When our projects go best, they start with an understanding of people and objectives. This is part of our discovery phase: a short period at the beginning of the project where we get to grips with the people who will use something we’re building, and the objectives of the organisation we’re working with. We deliver this knowledge as user stories, short sentences which enable us to check what we deliver is the right things, in the right order. Our design is about turning these stories into a piece of code that functions beautifully.</p>\n\n<p>That might mean working on the categorisation and collation of text and images to present a message or communicate some information. For that, we’d start with post- it notes representing that information in sections. We’d move those sections round, test how the information was organised with the kinds of people who’d actually consume it. We’d rearrange until we were happy with how the content worked for them, and achieved its objective for the people who we were working for. Maybe we’d need to commission some more text or images, maybe we wouldn’t. Mostly we’d re- organise it. Starting our work with content in this way means that we don’t end up with a visual design dictates what text and images are required.</p>\n\n<p>Or, more often, it means implementing a more complex interaction, again starting by understanding people and objectives. We believe in articulating this understanding as a series of user stories which speak to people and their feelings about the interaction. We prototype a response to these stories, so we can get testing our design early, and we prioritise the stories we’ll implement depending on the importance of the objectives they achieve. Our design here is to solve the equation of what is required and what is possible within budget in the most elegant way, balancing people and objectives.</p>\n\n<p>We’ve found the greater the focus on visual appearance at this stage, the more the requirements of content and interaction are obscured. It’s these design problems we concentrate on solving, and that’s how we’re designers.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389704925309,"created_by":1,"updated_at":1389705690484,"updated_by":1,"published_at":1389704925333,"published_by":1},{"id":6,"uuid":"f6e6a675-5dc4-4fb1-beaa-7e1ba7579560","title":"Thinking About Discovery","slug":"thinking-about-discovery","markdown":"Very interesting session at Agile tea camp last night about Discovery, led by <a href=\"http://twitter.com/lily_dart\">@lily_dart</a> from **DXW**. She talked about how they do it: open conversations, surveys and card sorting.\n\nWe've fairly recently changed our term for this bit of the software development process. It was always &#x201c;Sprint 0&#x201d; for us, that chunk of work that needed to be done so you could start coding. Then we read the Service Design Manual, and appropriated the term &#x201c;Discovery&#x201d; for the same kind of activity. We been developing a set of tools for this piece of work for a few years now. As you'd expect from a company on the <a href=\"https://gds.blog.gov.uk/2013/07/09/digital-services-framework/\">Digital Services Framework</a>, we concentrate on people - I don't like to call them users.\n\nThat said &mdash; we generally begin with a quick conversation about objectives. That's normally based on the goals of the project as a whole, and we've usually begun it before we start work - it'll have been articulated before we've become involved, and all we're doing is making sure we understand. It's just a check.\n\n## Getting into a people-centred mindset\n\nThe meat of our work in Discovery often starts with personas. They're fictitious characters that we use to make sure everyone's focussing on real people needs throughout the project. We'll generate these persona in collaboration with staff from our customer. Partly because they'll be in a good position to validate our work, but mostly because personas are useful for everyone to empathise with the people who will actually use the project, and what's important to them. \n\nThat part starts with a little desk research: we'll be thinking about the demographics of the people who'll use the project, we might have some analytics information from an existing version of the service\n\nIt continues with a workshop with our customer's staff. Where possible, we'll have people who might actually use the digital service along too to give us some real lived experience. We'll generate these characters together. We'll give these characters a name, an age, we'll understand where they live, what their homelife is like, what some of the other importasnt people in this life are like. We need to know enough about them for them to be useful, but they can evolve during the project. These first character sketches can be pretty quick and still useful. \n\nWhat these persona do is advocate on behalf of the people who'll eventually use the digital service. They represent the audience: unless the service is very targeted, they aren't all of it. They aren't average: they're individuals who we can ask questions. They won't lie to us: they won't be affected by other persona in the room as you might find real people at a focus group might be. They can reveal more about themselves than real people might: we can ask them questions about their unrealised needs in a way that isn't possible with real people. \n\nWhere this technique can fall down is where someone with an set view of precisely what the service should do. We've seen people like that use persona as a proxy for their pre-existing opinions. Having people who might use the service along to validate helps combat that. What we might also do is use a survey to check we're on the right track: that can expose entrenched thinking as unrepresentative.\n\nThat done, we'll put those personas in situations where their goals intersect with the project objectives. Those situations are generally one line or so - they certainly fit on a post-it note. They enable us to understand what's important to people who will actually use the digital service we're working on. \n\nThose personas, in those situations, help structure a conversation about what's important to the real people who'll use a digital service.\n\n","html":"<p>Very interesting session at Agile tea camp last night about Discovery, led by <a href=\"http://twitter.com/lily_dart\">@lily_dart</a> from <strong>DXW</strong>. She talked about how they do it: open conversations, surveys and card sorting.</p>\n\n<p>We've fairly recently changed our term for this bit of the software development process. It was always &#x201c;Sprint 0&#x201d; for us, that chunk of work that needed to be done so you could start coding. Then we read the Service Design Manual, and appropriated the term &#x201c;Discovery&#x201d; for the same kind of activity. We been developing a set of tools for this piece of work for a few years now. As you'd expect from a company on the <a href=\"https://gds.blog.gov.uk/2013/07/09/digital-services-framework/\">Digital Services Framework</a>, we concentrate on people - I don't like to call them users.</p>\n\n<p>That said &mdash; we generally begin with a quick conversation about objectives. That's normally based on the goals of the project as a whole, and we've usually begun it before we start work - it'll have been articulated before we've become involved, and all we're doing is making sure we understand. It's just a check.</p>\n\n<h2 id=\"gettingintoapeoplecentredmindset\">Getting into a people-centred mindset</h2>\n\n<p>The meat of our work in Discovery often starts with personas. They're fictitious characters that we use to make sure everyone's focussing on real people needs throughout the project. We'll generate these persona in collaboration with staff from our customer. Partly because they'll be in a good position to validate our work, but mostly because personas are useful for everyone to empathise with the people who will actually use the project, and what's important to them. </p>\n\n<p>That part starts with a little desk research: we'll be thinking about the demographics of the people who'll use the project, we might have some analytics information from an existing version of the service</p>\n\n<p>It continues with a workshop with our customer's staff. Where possible, we'll have people who might actually use the digital service along too to give us some real lived experience. We'll generate these characters together. We'll give these characters a name, an age, we'll understand where they live, what their homelife is like, what some of the other importasnt people in this life are like. We need to know enough about them for them to be useful, but they can evolve during the project. These first character sketches can be pretty quick and still useful. </p>\n\n<p>What these persona do is advocate on behalf of the people who'll eventually use the digital service. They represent the audience: unless the service is very targeted, they aren't all of it. They aren't average: they're individuals who we can ask questions. They won't lie to us: they won't be affected by other persona in the room as you might find real people at a focus group might be. They can reveal more about themselves than real people might: we can ask them questions about their unrealised needs in a way that isn't possible with real people. </p>\n\n<p>Where this technique can fall down is where someone with an set view of precisely what the service should do. We've seen people like that use persona as a proxy for their pre-existing opinions. Having people who might use the service along to validate helps combat that. What we might also do is use a survey to check we're on the right track: that can expose entrenched thinking as unrepresentative.</p>\n\n<p>That done, we'll put those personas in situations where their goals intersect with the project objectives. Those situations are generally one line or so - they certainly fit on a post-it note. They enable us to understand what's important to people who will actually use the digital service we're working on. </p>\n\n<p>Those personas, in those situations, help structure a conversation about what's important to the real people who'll use a digital service.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1389967025249,"created_by":1,"updated_at":1389967025249,"updated_by":1,"published_at":1389967025254,"published_by":1},{"id":7,"uuid":"a6c033a0-d8c3-46db-8c98-50a703404b40","title":"Projects","slug":"projects","markdown":"<p>Neontribe have helmed a diversity of web development projects in the public and private sectors. From apps to support young people with mental health problems to high traffic enterprise booking systems. Some of our projects are detailed below. \n<img src=\"/content/images/2014/Jan/logos.png\" alt=\"\" aria-hidden=\"true\" style=\"margin: 1.5em 0 0\" />\n</p>\n\n\n\n## DocReady\n\n**Client:** Futuregov\n\nDocReady is a web app designed to help young people with mental health issues prepare for appointments with their doctor. As well as useful information, it provides an easy checklist builder that outputs as PDF.\n\n[docready.org](http://www.docready.org)\n\n## Bookstash\n\n**Client:** Channel 4 Education\n\nChannel 4 Education has launched Bookstash, a Facebook application designed to get teens reading, discovering, sharing and discussing books.\n\n## Mind Of My Own\n\n**Client:** sixteen25\n\nA web and mobile app to help young people prepare for meetings and express their views, wishes and feelings to people like their social worker, advocate or leaving care worker.\n\n[app.mindofmyown.org](https://app.mindofmyown.org.uk)\n\n## The Great British Public Toilet Map\n\n**Client:** Helen Hamlyn Centre for Design/Royal College of Art\n\nThe public-participation website showing which councils publish open data about public toilets.\n\n[greatbritishpublictoiletmap.rca.ac.uk/](http://greatbritishpublictoiletmap.rca.ac.uk)\n\n## Minute Of Listening\n\n**Client:** Sound &amp; Music\n\nCreates a daily opportunity for pupils and teachers to explore a huge range of music and sound as a stimulus for class discussion and imaginative enquiry.\n\n[minuteoflistening.org](http://www.minuteoflistening.org/)\n\n## Boredometer\n\n**Client:** Substance\n\nBoredometer is an app. that finds places to go and things to do to help get rid of boredom. Boredometer tries to find things that are going on, but also lets your friends find them for you too.\n\n## Dictum\n\n**Client:** Channel 4 Education\n\nDictum was an app for MySpace and Bebo. It’s about showing what you Would or Would Never do, so it’s about playing with morality and showing the sort of person you are.\n\n## Plingback\n\n**Client:** Substance\n\n‘Plingback’ widgets allow young people to give feedback on the activities in their area. Activity providers can smoothly integrate the widgets on their website.\n\n[plings.net](http://www.plings.net/) (the main Plings website)\n\n## Research For Development\n\n**Client:** <abbr title=\"Commonwealth Agricultural Bureaux International\">CABI</abbr>\n\nA web application widget that uses open data from DFID, R4D and IATI to make research project info more available for reuse on other websites.\n\n[r4d.herokuapp.com](http://r4d.herokuapp.com/)\n\n## Alterego\n\n**Client:** Channel 4 Education\n\nAlterego allowed you to design badges which represent different sides to your personality. The badges link to the parts of the web that help make you who you are.\n\n","html":"<p>Neontribe have helmed a diversity of web development projects in the public and private sectors. From apps to support young people with mental health problems to high traffic enterprise booking systems. Some of our projects are detailed below.  \n<img src=\"/content/images/2014/Jan/logos.png\" alt=\"\" aria-hidden=\"true\" style=\"margin: 1.5em 0 0\" />  \n</p>\n\n<h2 id=\"docready\">DocReady</h2>\n\n<p><strong>Client:</strong> Futuregov</p>\n\n<p>DocReady is a web app designed to help young people with mental health issues prepare for appointments with their doctor. As well as useful information, it provides an easy checklist builder that outputs as PDF.</p>\n\n<p><a href=\"http://www.docready.org\">docready.org</a></p>\n\n<h2 id=\"bookstash\">Bookstash</h2>\n\n<p><strong>Client:</strong> Channel 4 Education</p>\n\n<p>Channel 4 Education has launched Bookstash, a Facebook application designed to get teens reading, discovering, sharing and discussing books.</p>\n\n<h2 id=\"mindofmyown\">Mind Of My Own</h2>\n\n<p><strong>Client:</strong> sixteen25</p>\n\n<p>A web and mobile app to help young people prepare for meetings and express their views, wishes and feelings to people like their social worker, advocate or leaving care worker.</p>\n\n<p><a href=\"https://app.mindofmyown.org.uk\">app.mindofmyown.org</a></p>\n\n<h2 id=\"thegreatbritishpublictoiletmap\">The Great British Public Toilet Map</h2>\n\n<p><strong>Client:</strong> Helen Hamlyn Centre for Design/Royal College of Art</p>\n\n<p>The public-participation website showing which councils publish open data about public toilets.</p>\n\n<p><a href=\"http://greatbritishpublictoiletmap.rca.ac.uk\">greatbritishpublictoiletmap.rca.ac.uk/</a></p>\n\n<h2 id=\"minuteoflistening\">Minute Of Listening</h2>\n\n<p><strong>Client:</strong> Sound &amp; Music</p>\n\n<p>Creates a daily opportunity for pupils and teachers to explore a huge range of music and sound as a stimulus for class discussion and imaginative enquiry.</p>\n\n<p><a href=\"http://www.minuteoflistening.org/\">minuteoflistening.org</a></p>\n\n<h2 id=\"boredometer\">Boredometer</h2>\n\n<p><strong>Client:</strong> Substance</p>\n\n<p>Boredometer is an app. that finds places to go and things to do to help get rid of boredom. Boredometer tries to find things that are going on, but also lets your friends find them for you too.</p>\n\n<h2 id=\"dictum\">Dictum</h2>\n\n<p><strong>Client:</strong> Channel 4 Education</p>\n\n<p>Dictum was an app for MySpace and Bebo. It’s about showing what you Would or Would Never do, so it’s about playing with morality and showing the sort of person you are.</p>\n\n<h2 id=\"plingback\">Plingback</h2>\n\n<p><strong>Client:</strong> Substance</p>\n\n<p>‘Plingback’ widgets allow young people to give feedback on the activities in their area. Activity providers can smoothly integrate the widgets on their website.</p>\n\n<p><a href=\"http://www.plings.net/\">plings.net</a> (the main Plings website)</p>\n\n<h2 id=\"researchfordevelopment\">Research For Development</h2>\n\n<p><strong>Client:</strong> <abbr title=\"Commonwealth Agricultural Bureaux International\">CABI</abbr></p>\n\n<p>A web application widget that uses open data from DFID, R4D and IATI to make research project info more available for reuse on other websites.</p>\n\n<p><a href=\"http://r4d.herokuapp.com/\">r4d.herokuapp.com</a></p>\n\n<h2 id=\"alterego\">Alterego</h2>\n\n<p><strong>Client:</strong> Channel 4 Education</p>\n\n<p>Alterego allowed you to design badges which represent different sides to your personality. The badges link to the parts of the web that help make you who you are.</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1390303783120,"created_by":1,"updated_at":1390574372654,"updated_by":1,"published_at":1390304280000,"published_by":1},{"id":8,"uuid":"ff76ff53-a310-4ef5-b461-ce945b82c0fc","title":"Our process: Development","slug":"our-process-development","markdown":"We believe in agile and iterative development, with testing at every stage, married to a design that respects the digital medium.\n\n## Coding\n\nWe code in sprints: concentrated, time-bound chunks of effort to deliver code that answers people's needs. We're comfortable with HTML/CSS, Javascript, and PHP, Python or Java. In may cases, we'll use frameworks to make us as productie as possible. We're also happy developing websites that use Drupal or Wordpress to deliver content management, or APIs to handle back-end functions. If a responsive site design doesn't fit your requirements, we favour a cross- platform approach to developing mobile apps. If that approach doesn't work for your specific needs, we'll tell you.\n\nAfter every one of those sprints, we'll show you what we've done, do some testing and talk to you about prioritisation for the next one. Sometimes this will be obvious, sometimes it'll take a little longer.\n\n## Testing\n\nAutomated testing means we can sleep at night, and improve code without extensive and time-consuming manual testing. That automated testing can be linked to deployment processes too, so that we can push new updates to live sites fast. None of this replaces the need for testing by people, though. Our iterative approach produces the best results when we test how our software works with people who will actually it. Insights from those session drive our improvement of the digital products we create.\n\n## Visual design\n\nWe favour design appropriate to digital products. That means thinking about file sizes, about the amount of code a design will require, and about reaching first for those techniques which are part of web standards. It also means our instinct is for responsive design which respects the fact that it will be viewed on different screen sizes and devices. Preferably, that's partnered by a content strategy that does the same. It also means thinking about accessibility from the start. That's not a checkbox exercise, that's an essential, and for us good design is accessible, inclusive design. \n\nWe begin our design process with a simple style guide that talks about typography, colour palletes, and then headings, lists, boxes, and form elements. We apply that design to our prototypes to give us something whose we can test, and then we make improvements as necessary. We don't work from flat mockups of an entire digital product.","html":"<p>We believe in agile and iterative development, with testing at every stage, married to a design that respects the digital medium.</p>\n\n<h2 id=\"coding\">Coding</h2>\n\n<p>We code in sprints: concentrated, time-bound chunks of effort to deliver code that answers people's needs. We're comfortable with HTML/CSS, Javascript, and PHP, Python or Java. In may cases, we'll use frameworks to make us as productie as possible. We're also happy developing websites that use Drupal or Wordpress to deliver content management, or APIs to handle back-end functions. If a responsive site design doesn't fit your requirements, we favour a cross- platform approach to developing mobile apps. If that approach doesn't work for your specific needs, we'll tell you.</p>\n\n<p>After every one of those sprints, we'll show you what we've done, do some testing and talk to you about prioritisation for the next one. Sometimes this will be obvious, sometimes it'll take a little longer.</p>\n\n<h2 id=\"testing\">Testing</h2>\n\n<p>Automated testing means we can sleep at night, and improve code without extensive and time-consuming manual testing. That automated testing can be linked to deployment processes too, so that we can push new updates to live sites fast. None of this replaces the need for testing by people, though. Our iterative approach produces the best results when we test how our software works with people who will actually it. Insights from those session drive our improvement of the digital products we create.</p>\n\n<h2 id=\"visualdesign\">Visual design</h2>\n\n<p>We favour design appropriate to digital products. That means thinking about file sizes, about the amount of code a design will require, and about reaching first for those techniques which are part of web standards. It also means our instinct is for responsive design which respects the fact that it will be viewed on different screen sizes and devices. Preferably, that's partnered by a content strategy that does the same. It also means thinking about accessibility from the start. That's not a checkbox exercise, that's an essential, and for us good design is accessible, inclusive design. </p>\n\n<p>We begin our design process with a simple style guide that talks about typography, colour palletes, and then headings, lists, boxes, and form elements. We apply that design to our prototypes to give us something whose we can test, and then we make improvements as necessary. We don't work from flat mockups of an entire digital product.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1390391663710,"created_by":1,"updated_at":1390397334456,"updated_by":1,"published_at":1390391666982,"published_by":1},{"id":9,"uuid":"836b430b-1c3c-4cab-afa3-b4f97fa3245a","title":"Our process: Delivery","slug":"our-process-delivery","markdown":"Delivery is only the beginning. Technology moves on, search engines move on, and people's needs from sites evolve.\n\n## Launch\n\nIf we've followed our process through, launch is comparatively simple. We'll already have launched several versions of the software, and we'll know the process back-to-front. You'll have seen the digital; product evolve already, you'll have been involved in judging what its most important features are, and we'll have tested them with real people.\n\n## Measurement\n\nWe'll have worked with you to understand what success looks like, and what the journeys are between arrival and successful completion of a user story. We'll be able to check where people leave the site, and make some theories as to why.\n\n## Improvement\n\nThroughout development, we'll have been prioritising features. We'll always be working on the most important ones. This doesn't stop when the product goes live. However small a project, we like to keep some budget back to take care of the inevitable changes we'd like to make. Your objectives will change over time, and we'll need to be aware of that so we can respond. New browser versions will be released, and we'll need to support them. Search engines are continually updating their algorithms, and we'll need to keep up. Most importantly: what  people want will change, and we'll need to respond to that.","html":"<p>Delivery is only the beginning. Technology moves on, search engines move on, and people's needs from sites evolve.</p>\n\n<h2 id=\"launch\">Launch</h2>\n\n<p>If we've followed our process through, launch is comparatively simple. We'll already have launched several versions of the software, and we'll know the process back-to-front. You'll have seen the digital; product evolve already, you'll have been involved in judging what its most important features are, and we'll have tested them with real people.</p>\n\n<h2 id=\"measurement\">Measurement</h2>\n\n<p>We'll have worked with you to understand what success looks like, and what the journeys are between arrival and successful completion of a user story. We'll be able to check where people leave the site, and make some theories as to why.</p>\n\n<h2 id=\"improvement\">Improvement</h2>\n\n<p>Throughout development, we'll have been prioritising features. We'll always be working on the most important ones. This doesn't stop when the product goes live. However small a project, we like to keep some budget back to take care of the inevitable changes we'd like to make. Your objectives will change over time, and we'll need to be aware of that so we can respond. New browser versions will be released, and we'll need to support them. Search engines are continually updating their algorithms, and we'll need to keep up. Most importantly: what  people want will change, and we'll need to respond to that.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1390396914768,"created_by":1,"updated_at":1390397231942,"updated_by":1,"published_at":1390396914770,"published_by":1},{"id":10,"uuid":"af6be0e3-03b3-49bb-9a8f-6f6ac2006adf","title":"Fixing an SVG gotcha","slug":"fixing-an-svg-gotcha","markdown":"So there you are thinking I just need to put this graphic in to my web page and everyone will be happy. But your graphic just happens to be an SVG. Great, you think, that will look ace at all the sizes I need to show it. This is mostly true, but there are a few catches that will require you to do a little extra work. Firstly IE8 and older just won’t so you will need to provide an alternative for these browsers such as:\n\n```\n<!--[if lt IE 9]>\n    <h1><img class=\"logo\" src=\"images/logo.png\" /><span>Login</span></h1>\n<!<![endif]-->\n<!--[if gt IE 8]>\n    <h1><img class=\"logo\" src=\"images/logo.svg\" alt=\"\"  /><span>Login</span></h1>\n<!<![endif]-->\n<!--[if !IE]><!-->\n    <h1><img class=\"logo\" src=\"images/logo.svg\" alt=\"\" /><span>Login</span></h1>\n<!--<![endif]-->\n\n```\n\n## The gotcha\n\nThis is good, we have an SVG where we can and a PNG where we just can’t. Now comes the gotcha: IE looks for a `viewBox` attribute on an svg in order to correctly scale it. Only some SVG creation and editing programs include this attribute; note that Inkscape does not by default. So, we must ensure that this attribute is present. SVG images are just markup so we can open them in our favorite text editors. We now need to add the viewBox attribute like this (see the last line):\n\n```\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   version=\"1.1\"\n   width=\"541.02563\"\n   height=\"281.4584\"\n   viewBox=\"0 0 541.02563 281.4584\"\n```\n\nWe add the `viewBox=` line with the value `0 0 [width] [height]`. When we use this fixed SVG, IE will scale it as we would hope. Otherwise, if the `viewBox` line is not in your SVG, IE will clip your SVG at the size your were expecting to scale too.","html":"<p>So there you are thinking I just need to put this graphic in to my web page and everyone will be happy. But your graphic just happens to be an SVG. Great, you think, that will look ace at all the sizes I need to show it. This is mostly true, but there are a few catches that will require you to do a little extra work. Firstly IE8 and older just won’t so you will need to provide an alternative for these browsers such as:</p>\n\n<pre><code>&lt;!--[if lt IE 9]&gt;  \n    &lt;h1&gt;&lt;img class=\"logo\" src=\"images/logo.png\" /&gt;&lt;span&gt;Login&lt;/span&gt;&lt;/h1&gt;\n&lt;!&lt;![endif]--&gt;  \n&lt;!--[if gt IE 8]&gt;  \n    &lt;h1&gt;&lt;img class=\"logo\" src=\"images/logo.svg\" alt=\"\"  /&gt;&lt;span&gt;Login&lt;/span&gt;&lt;/h1&gt;\n&lt;!&lt;![endif]--&gt;  \n&lt;!--[if !IE]&gt;&lt;!--&gt;  \n    &lt;h1&gt;&lt;img class=\"logo\" src=\"images/logo.svg\" alt=\"\" /&gt;&lt;span&gt;Login&lt;/span&gt;&lt;/h1&gt;\n&lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<h2 id=\"thegotcha\">The gotcha</h2>\n\n<p>This is good, we have an SVG where we can and a PNG where we just can’t. Now comes the gotcha: IE looks for a <code>viewBox</code> attribute on an svg in order to correctly scale it. Only some SVG creation and editing programs include this attribute; note that Inkscape does not by default. So, we must ensure that this attribute is present. SVG images are just markup so we can open them in our favorite text editors. We now need to add the viewBox attribute like this (see the last line):</p>\n\n<pre><code>&lt;svg  \n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   version=\"1.1\"\n   width=\"541.02563\"\n   height=\"281.4584\"\n   viewBox=\"0 0 541.02563 281.4584\"\n</code></pre>\n\n<p>We add the <code>viewBox=</code> line with the value <code>0 0 [width] [height]</code>. When we use this fixed SVG, IE will scale it as we would hope. Otherwise, if the <code>viewBox</code> line is not in your SVG, IE will clip your SVG at the size your were expecting to scale too.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1398353669474,"created_by":1,"updated_at":1398354090194,"updated_by":1,"published_at":1398353669487,"published_by":1},{"id":11,"uuid":"7e92a5c2-7819-47ec-92f9-7fba64c5da55","title":"Smart Sass: Dynamic Sass with PHP Smarty","slug":"smart-sass-dynamic-sass-variables-with-php-smarty","markdown":"Sass is a language which makes use of server-side compilation in order to generate CSS. Variables are one of the core features of Sass and allow us to specify reusable style definitions. However, what if we want the values of these variables to be assigned dynamically? To add some context to the issue, lets imagine that we have a site but we would like for the client to define the background colour, font and text colour whilst also maintaining our nicely formatted Sass file. Well, here's how:\n\nFirstly, we will need to add a third layer of architecture to our CSS generation for which we will need a server side templating language. For the purposes of this article we will use the PHP templating engine 'Smarty'.  Using Smarty we can now create, what I'm calling **Smart Sass** files using the Smarty variable notation `{$myVariable}`.  Couple this with Sass variable declarations and we end up with the Smarty template file looking something like this:\n\n```\n$font: {$myFont};\n$textColour: {$myTextColour};\n$background: {$myBackground};\n\nbody {\n  font: $font;\n  color: $textColour;\n  background: $background;\n}\n```\n\nNotice that the Smarty and Sass variable syntax is very similar, this can actually cause a conflict and is discussed later in the article. Name this file something like styles.tpl ready for the next step: assigning values to our Smarty templates and compiling it to generate our Sass file.\n\nLet's now create a PHP function which will initalise an instance of Smarty and assign our template variables some values:\n\n```\nfunction update_styles() {\n  require_once 'Smarty/libs/Smarty.class.php';\n\n  // Create Smarty object\n  $smarty = new Smarty();\n\n  // Here you should set some Smarty directories for caching, config and compiling etc.\n\n  // Set our Smarty template values\n  $smarty->assign('myFont', 'sans-serif');\n  $smarty->assign('myTextColour', '#000');\n  $smarty->assign('myBackground', 'yellow');\n}\n```\n\nOf course you will likely want to adapt the example above to, for example, retrieve the values from a form request and loop over the submitted values.\n\nNext, we want to be able to insert these values into the Smarty template we defined earlier, return the compiled output and write this value to our new, Sass formatted file.  To do this, we can append the following to our function:\n\n```\n// Get compiled template output\n$data = $smarty->fetch('style.tpl');\n\n// Write compiled ouput to our SASS file\n$file = 'style.scss';\n$handle = fopen($file, 'w');\nfwrite($handle, $data);\nfclose($handle);\n```\n\nExecute this function and _tadahh!_ Check it out, we now have a `style.scss` Sass file filled out with all the variable values we assigned. **Note:** If you don't see a generated file there is probably something wrong with your file paths and/or permissions.\n\nWait, there's one last step. In order to generate the CSS from the Sass file we need to call the Compass compiler (Sass is built on this).  To do this I called the following PHP function where $dir is the location for where our Sass project lives:\n\n```\nexec(\"compass compile $dir\");\n```\n\nDone! We now have an automated system for generating Sass files based on our dynamic input.\n\n## Things to keep in mind with this approach\n\n1. The process is one-way meaning that if we start modifying the output Sass file, we cannot reverse our process in order to generate an equivalent Smarty template (or whichever templating engine you decide to use).  In other words, recompiling our Smart Sass files would lose any changes that were made directly to the `style.scss` file.  All this really means is that you should remember to only update the code at top layer - the Smart Sass files. This way,  our changes will trickle down the process flow correctly.\n\n2. The web user will need permissions to write to the output Sass file(s) and Smarty compilation directory (refer to the Smarty docs for how to get started and configure such options).\n\n## Avoiding a Sass+Smarty conflict\n\nBeing so alike, it is possible for the SASS and Smarty syntaxes to collide; specifically SASS allows the following `#{$variable}`.\n\nI was able to avoid this feature by limiting Smarty to only compiling a partial Sass file  \\_vars.scss which stores all the variable definitions.  This approach means we can limit the amount of additional compilation needed and  potentially separate static and dynamic Sass variables. This means -- as long as you're careful -- the syntax conflict can be avoided.\n\n## But we already have a PHP port of Sass\n\nYes they do exist ([phpsass](https://packagist.org/packages/richthegeek/phpsass)). However, they rely on continuous maintenance to bring them in-line with the Sass compiler.  That said, if this isn't really a concern, it may be a better fit and is one I haven't fully explored.","html":"<p>Sass is a language which makes use of server-side compilation in order to generate CSS. Variables are one of the core features of Sass and allow us to specify reusable style definitions. However, what if we want the values of these variables to be assigned dynamically? To add some context to the issue, lets imagine that we have a site but we would like for the client to define the background colour, font and text colour whilst also maintaining our nicely formatted Sass file. Well, here's how:</p>\n\n<p>Firstly, we will need to add a third layer of architecture to our CSS generation for which we will need a server side templating language. For the purposes of this article we will use the PHP templating engine 'Smarty'.  Using Smarty we can now create, what I'm calling <strong>Smart Sass</strong> files using the Smarty variable notation <code>{$myVariable}</code>.  Couple this with Sass variable declarations and we end up with the Smarty template file looking something like this:</p>\n\n<pre><code>$font: {$myFont};\n$textColour: {$myTextColour};\n$background: {$myBackground};\n\nbody {  \n  font: $font;\n  color: $textColour;\n  background: $background;\n}\n</code></pre>\n\n<p>Notice that the Smarty and Sass variable syntax is very similar, this can actually cause a conflict and is discussed later in the article. Name this file something like styles.tpl ready for the next step: assigning values to our Smarty templates and compiling it to generate our Sass file.</p>\n\n<p>Let's now create a PHP function which will initalise an instance of Smarty and assign our template variables some values:</p>\n\n<pre><code>function update_styles() {  \n  require_once 'Smarty/libs/Smarty.class.php';\n\n  // Create Smarty object\n  $smarty = new Smarty();\n\n  // Here you should set some Smarty directories for caching, config and compiling etc.\n\n  // Set our Smarty template values\n  $smarty-&gt;assign('myFont', 'sans-serif');\n  $smarty-&gt;assign('myTextColour', '#000');\n  $smarty-&gt;assign('myBackground', 'yellow');\n}\n</code></pre>\n\n<p>Of course you will likely want to adapt the example above to, for example, retrieve the values from a form request and loop over the submitted values.</p>\n\n<p>Next, we want to be able to insert these values into the Smarty template we defined earlier, return the compiled output and write this value to our new, Sass formatted file.  To do this, we can append the following to our function:</p>\n\n<pre><code>// Get compiled template output\n$data = $smarty-&gt;fetch('style.tpl');\n\n// Write compiled ouput to our SASS file\n$file = 'style.scss';\n$handle = fopen($file, 'w');\nfwrite($handle, $data);  \nfclose($handle);  \n</code></pre>\n\n<p>Execute this function and <em>tadahh!</em> Check it out, we now have a <code>style.scss</code> Sass file filled out with all the variable values we assigned. <strong>Note:</strong> If you don't see a generated file there is probably something wrong with your file paths and/or permissions.</p>\n\n<p>Wait, there's one last step. In order to generate the CSS from the Sass file we need to call the Compass compiler (Sass is built on this).  To do this I called the following PHP function where $dir is the location for where our Sass project lives:</p>\n\n<pre><code>exec(\"compass compile $dir\");  \n</code></pre>\n\n<p>Done! We now have an automated system for generating Sass files based on our dynamic input.</p>\n\n<h2 id=\"thingstokeepinmindwiththisapproach\">Things to keep in mind with this approach</h2>\n\n<ol>\n<li><p>The process is one-way meaning that if we start modifying the output Sass file, we cannot reverse our process in order to generate an equivalent Smarty template (or whichever templating engine you decide to use).  In other words, recompiling our Smart Sass files would lose any changes that were made directly to the <code>style.scss</code> file.  All this really means is that you should remember to only update the code at top layer - the Smart Sass files. This way,  our changes will trickle down the process flow correctly.</p></li>\n<li><p>The web user will need permissions to write to the output Sass file(s) and Smarty compilation directory (refer to the Smarty docs for how to get started and configure such options).</p></li>\n</ol>\n\n<h2 id=\"avoidingasasssmartyconflict\">Avoiding a Sass+Smarty conflict</h2>\n\n<p>Being so alike, it is possible for the SASS and Smarty syntaxes to collide; specifically SASS allows the following <code>#{$variable}</code>.</p>\n\n<p>I was able to avoid this feature by limiting Smarty to only compiling a partial Sass file  _vars.scss which stores all the variable definitions.  This approach means we can limit the amount of additional compilation needed and  potentially separate static and dynamic Sass variables. This means -- as long as you're careful -- the syntax conflict can be avoided.</p>\n\n<h2 id=\"butwealreadyhaveaphpportofsass\">But we already have a PHP port of Sass</h2>\n\n<p>Yes they do exist (<a href=\"https://packagist.org/packages/richthegeek/phpsass\">phpsass</a>). However, they rely on continuous maintenance to bring them in-line with the Sass compiler.  That said, if this isn't really a concern, it may be a better fit and is one I haven't fully explored.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1400839978526,"created_by":1,"updated_at":1400843508098,"updated_by":1,"published_at":1400840111525,"published_by":1},{"id":12,"uuid":"3a01623c-7c2e-429a-92e2-ce6cac8c980f","title":"Minecraft: Making miners out of minors","slug":"minecraft-server-install-on-ubuntu-14-04-server-x64","markdown":"## (Minecraft server install on Ubuntu 14.04 Server x64)\n\nNeontribe regularly use Minecraft as a teaching resource to get young people interested in programming and administration. These instructions are for setting up a Minecraft server on Ubuntu 14.04 x64. It assumes you have a Ubuntu Server install, 1 GiB of free memory, the ability to use a text editor and a user account with sudo privilleges.\n\nWe are going to peform all of these actions as our own user account (the one with sudo privileges), for me that is the user \"neon\". The hostname of our example server is \"moria\".\n\n## Install Oracle Java\nMinecraft is written in Java so first of all we want to install Oracle Java. We are going to use a Personal Package Archive (PPA) to install Java which is a method of adding software that is not bundled with Ubuntu - [you can read more about PPA's here](https://help.launchpad.net/Packaging/PPA).\n\n```\nneon@moria:~$ sudo add-apt-repository ppa:webupd8team/java\nneon@moria:~$ sudo apt-get update\nneon@moria:~$ sudo apt-get install oracle-java7-installer\n```\n\nYou could use Java 8 (in which case just \"sudo apt-get install oracle-java8-installer\" instead) but Mojang currently recomends Java 7.\n\n## Create minecraft user and group\nWe want to create a minecraft user and group to run the server, so if the account is compromised other services should be unaffected. \n```\nneon@moria:~$ sudo addgroup --system minecraft\nneon@moria:~$ sudo useradd -r -d /srv/minecraft -m minecraft -g minecraft\n```\n\n## Fetch the Minecraft installer\n```\nneon@moria:~$ sudo curl -o /srv/minecraft/minecraft_server.1.8.1.jar https://s3.amazonaws.com/Minecraft.Download/versions/1.8.1/minecraft_server.1.8.1.jar\n```\n\nWe are going to create a symbolic link to the minecraft jar file, so if we update the version in the future we only have to update the symbolic link, not edit all our config files and upstart scripts.\n```\nneon@moria:~$ sudo ln -s /srv/minecraft/minecraft_server.1.8.1.jar /srv/minecraft/minecraft_server.jar\n```\n\nWe are going to start up the Minecraft server for the first time but it's going to halt and inform us that we need to edit the eula.txt file before it can continue.\n```\nneon@moria:~$ sudo /usr/bin/java -Xms512M -Xmx512M -jar /srv/minecraft/minecraft_server.jar nogui\n[11:00:06] [Server thread/INFO]: Starting minecraft server version 1.8.1\n[11:00:06] [Server thread/WARN]: To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"\n[11:00:06] [Server thread/INFO]: Loading properties\n[11:00:06] [Server thread/WARN]: server.properties does not exist\n[11:00:06] [Server thread/INFO]: Generating new properties file\n[11:00:06] [Server thread/WARN]: Failed to load eula.txt\n[11:00:06] [Server thread/INFO]: You need to agree to the EULA in order to run the server. Go to eula.txt for more info.\n[11:00:06] [Server thread/INFO]: Stopping server\n[11:00:06] [Server Shutdown Thread/INFO]: Stopping server\n```\n\nYou should read the Mojang [EULA](https://account.mojang.com/documents/minecraft_eula) and if you agree with the terms and conditions you need to fire up your favorite text editor and change the eula=false line to eula=true, then save and exit the text editor.\n\n```\nneon@moria:~$ sudo vim /srv/minecraft/eula.txt\n- eula=false\n+ eula=true\n```\n\n## Setting up a whitelist\n\nBy default Minecraft will allow any player with the server details to connect to the server. It's a good idea to create a white list of allowed user names.\n\n```\nneon@moria:~$ sudo vim /srv/minecraft/whitelist.txt\n+ <username1> \n+ <username2>\n+ <username3>\n```\n\n## Configuring server.properties \n\nMinecraft defaults to having pvp enabled, while amusing this is not really conductive to a learning experience. There are lots of other variables you can tweak in the server.properties file all of which are [documented](http://minecraft.gamepedia.com/Server.properties).\n\n```\nneon@moria:~$ sudo vim /srv/minecraft/server.properties\n- pvp=true\n+ pvp=false\n```\n\n## Reset file permissions\n\nWe have been editing files all over the place with sudo and want to make sure the minecraft user owns all of the files now we have finished configuring it (you will need to run this command again if you go back and make any changes to the config files above).\n\n```\nneon@moria:~$ sudo chown -R minecraft:minecraft /srv/minecraft\n```\n\n\n## Create upstart script\nAt the moment we can manually start and stop the minecraft server, it would be preferable if it started up on boot, and shutdown when the server shutdown. We want to create an upstart script to manage this.\n```\nneon@moria:~$ sudo vim /etc/init/minecraft-server.conf\n# description \"start and stop the minecraft-server\"\n\nstart on runlevel [2345]\nstop on runlevel [^2345]\n\nconsole log\nchdir /srv/minecraft/\nsetuid minecraft\nsetgid minecraft\n\nrespawn\nrespawn limit 20 5\n\nexec /usr/bin/java -Xms512M -Xmx512M -jar minecraft_server.jar nogui\n```\n\nWe can also manually stop and start the server from the console now.\n\n```\nneon@moria:~$ sudo start minecraft-server \nminecraft-server start/running, process 1087\nneon@moria:~$ ps -ef | grep java\nminecra+  1087     1 99 13:30 ?        00:00:10 /usr/bin/java -Xms512M -Xmx512M -jar minecraft_server.jar nogui\nneon      1099  1035  0 13:31 pts/0    00:00:00 grep --color=auto java\n```\n\nYou should see two process's here, one the actual java process that's running Minecraft - the other is my ps command looking for process's that contain the string \"java\"\n\n```\nneon@moria:~$ sudo stop minecraft-server \nminecraft-server stop/waiting\nneon@moria:~$ ps -ef | grep java\nneon      1120  1035  0 13:32 pts/0    00:00:00 grep --color=auto java\n```\n\nAfter stopping the Minecraft server we can only see my ps command. Now to reboot and check that the Minecraft server starts automatically.\n\n```\nneon@moria:~$ sudo reboot\nBroadcast message from neon@moria\n\t(/dev/pts/0) at 13:33 ...\n\nThe system is going down for reboot NOW!\n\nUbuntu 14.04.2 LTS moria tty1\n\nmoria login: neon\nPassword:\n\nWelcome to Ubuntu 14.04.2 LTS (GNU/Linux 3.16.0-31-generic x86_64)\nneon@moria:~$ ps -ef | grep java\nminecra+   765     1 29 13:33 ?        00:00:26 /usr/bin/java -Xms512M -Xmx512M -jar minecraft_server.jar nogui\nneon      1114  1099  0 13:35 pts/0    00:00:00 grep --color=auto java\n```\n\nWe can see that the Minecraft server has started itself up as per our jumpstart script. Congratulations you now have a functioning Minecraft server!\n\nNext time we will take a look at securing the server with a firewall and SSH for remote administration, automatically backing up our Minecraft world and rotating our log files so that they don't fill the servers disk up.","html":"<h2 id=\"minecraftserverinstallonubuntu1404serverx64\">(Minecraft server install on Ubuntu 14.04 Server x64)</h2>\n\n<p>Neontribe regularly use Minecraft as a teaching resource to get young people interested in programming and administration. These instructions are for setting up a Minecraft server on Ubuntu 14.04 x64. It assumes you have a Ubuntu Server install, 1 GiB of free memory, the ability to use a text editor and a user account with sudo privilleges.</p>\n\n<p>We are going to peform all of these actions as our own user account (the one with sudo privileges), for me that is the user \"neon\". The hostname of our example server is \"moria\".</p>\n\n<h2 id=\"installoraclejava\">Install Oracle Java</h2>\n\n<p>Minecraft is written in Java so first of all we want to install Oracle Java. We are going to use a Personal Package Archive (PPA) to install Java which is a method of adding software that is not bundled with Ubuntu - <a href=\"https://help.launchpad.net/Packaging/PPA\">you can read more about PPA's here</a>.</p>\n\n<pre><code>neon@moria:~$ sudo add-apt-repository ppa:webupd8team/java  \nneon@moria:~$ sudo apt-get update  \nneon@moria:~$ sudo apt-get install oracle-java7-installer  \n</code></pre>\n\n<p>You could use Java 8 (in which case just \"sudo apt-get install oracle-java8-installer\" instead) but Mojang currently recomends Java 7.</p>\n\n<h2 id=\"createminecraftuserandgroup\">Create minecraft user and group</h2>\n\n<p>We want to create a minecraft user and group to run the server, so if the account is compromised other services should be unaffected.  </p>\n\n<pre><code>neon@moria:~$ sudo addgroup --system minecraft  \nneon@moria:~$ sudo useradd -r -d /srv/minecraft -m minecraft -g minecraft  \n</code></pre>\n\n<h2 id=\"fetchtheminecraftinstaller\">Fetch the Minecraft installer</h2>\n\n<pre><code>neon@moria:~$ sudo curl -o /srv/minecraft/minecraft_server.1.8.1.jar https://s3.amazonaws.com/Minecraft.Download/versions/1.8.1/minecraft_server.1.8.1.jar  \n</code></pre>\n\n<p>We are going to create a symbolic link to the minecraft jar file, so if we update the version in the future we only have to update the symbolic link, not edit all our config files and upstart scripts.  </p>\n\n<pre><code>neon@moria:~$ sudo ln -s /srv/minecraft/minecraft_server.1.8.1.jar /srv/minecraft/minecraft_server.jar  \n</code></pre>\n\n<p>We are going to start up the Minecraft server for the first time but it's going to halt and inform us that we need to edit the eula.txt file before it can continue.  </p>\n\n<pre><code>neon@moria:~$ sudo /usr/bin/java -Xms512M -Xmx512M -jar /srv/minecraft/minecraft_server.jar nogui  \n[11:00:06] [Server thread/INFO]: Starting minecraft server version 1.8.1\n[11:00:06] [Server thread/WARN]: To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"\n[11:00:06] [Server thread/INFO]: Loading properties\n[11:00:06] [Server thread/WARN]: server.properties does not exist\n[11:00:06] [Server thread/INFO]: Generating new properties file\n[11:00:06] [Server thread/WARN]: Failed to load eula.txt\n[11:00:06] [Server thread/INFO]: You need to agree to the EULA in order to run the server. Go to eula.txt for more info.\n[11:00:06] [Server thread/INFO]: Stopping server\n[11:00:06] [Server Shutdown Thread/INFO]: Stopping server\n</code></pre>\n\n<p>You should read the Mojang <a href=\"https://account.mojang.com/documents/minecraft_eula\">EULA</a> and if you agree with the terms and conditions you need to fire up your favorite text editor and change the eula=false line to eula=true, then save and exit the text editor.</p>\n\n<pre><code>neon@moria:~$ sudo vim /srv/minecraft/eula.txt  \n- eula=false\n+ eula=true\n</code></pre>\n\n<h2 id=\"settingupawhitelist\">Setting up a whitelist</h2>\n\n<p>By default Minecraft will allow any player with the server details to connect to the server. It's a good idea to create a white list of allowed user names.</p>\n\n<pre><code>neon@moria:~$ sudo vim /srv/minecraft/whitelist.txt  \n+ &lt;username1&gt; \n+ &lt;username2&gt;\n+ &lt;username3&gt;\n</code></pre>\n\n<h2 id=\"configuringserverproperties\">Configuring server.properties</h2>\n\n<p>Minecraft defaults to having pvp enabled, while amusing this is not really conductive to a learning experience. There are lots of other variables you can tweak in the server.properties file all of which are <a href=\"http://minecraft.gamepedia.com/Server.properties\">documented</a>.</p>\n\n<pre><code>neon@moria:~$ sudo vim /srv/minecraft/server.properties  \n- pvp=true\n+ pvp=false\n</code></pre>\n\n<h2 id=\"resetfilepermissions\">Reset file permissions</h2>\n\n<p>We have been editing files all over the place with sudo and want to make sure the minecraft user owns all of the files now we have finished configuring it (you will need to run this command again if you go back and make any changes to the config files above).</p>\n\n<pre><code>neon@moria:~$ sudo chown -R minecraft:minecraft /srv/minecraft  \n</code></pre>\n\n<h2 id=\"createupstartscript\">Create upstart script</h2>\n\n<p>At the moment we can manually start and stop the minecraft server, it would be preferable if it started up on boot, and shutdown when the server shutdown. We want to create an upstart script to manage this.  </p>\n\n<pre><code>neon@moria:~$ sudo vim /etc/init/minecraft-server.conf  \n# description \"start and stop the minecraft-server\"\n\nstart on runlevel [2345]  \nstop on runlevel [^2345]\n\nconsole log  \nchdir /srv/minecraft/  \nsetuid minecraft  \nsetgid minecraft\n\nrespawn  \nrespawn limit 20 5\n\nexec /usr/bin/java -Xms512M -Xmx512M -jar minecraft_server.jar nogui  \n</code></pre>\n\n<p>We can also manually stop and start the server from the console now.</p>\n\n<pre><code>neon@moria:~$ sudo start minecraft-server  \nminecraft-server start/running, process 1087  \nneon@moria:~$ ps -ef | grep java  \nminecra+  1087     1 99 13:30 ?        00:00:10 /usr/bin/java -Xms512M -Xmx512M -jar minecraft_server.jar nogui  \nneon      1099  1035  0 13:31 pts/0    00:00:00 grep --color=auto java  \n</code></pre>\n\n<p>You should see two process's here, one the actual java process that's running Minecraft - the other is my ps command looking for process's that contain the string \"java\"</p>\n\n<pre><code>neon@moria:~$ sudo stop minecraft-server  \nminecraft-server stop/waiting  \nneon@moria:~$ ps -ef | grep java  \nneon      1120  1035  0 13:32 pts/0    00:00:00 grep --color=auto java  \n</code></pre>\n\n<p>After stopping the Minecraft server we can only see my ps command. Now to reboot and check that the Minecraft server starts automatically.</p>\n\n<pre><code>neon@moria:~$ sudo reboot  \nBroadcast message from neon@moria  \n    (/dev/pts/0) at 13:33 ...\n\nThe system is going down for reboot NOW!\n\nUbuntu 14.04.2 LTS moria tty1\n\nmoria login: neon  \nPassword:\n\nWelcome to Ubuntu 14.04.2 LTS (GNU/Linux 3.16.0-31-generic x86_64)  \nneon@moria:~$ ps -ef | grep java  \nminecra+   765     1 29 13:33 ?        00:00:26 /usr/bin/java -Xms512M -Xmx512M -jar minecraft_server.jar nogui  \nneon      1114  1099  0 13:35 pts/0    00:00:00 grep --color=auto java  \n</code></pre>\n\n<p>We can see that the Minecraft server has started itself up as per our jumpstart script. Congratulations you now have a functioning Minecraft server!</p>\n\n<p>Next time we will take a look at securing the server with a firewall and SSH for remote administration, automatically backing up our Minecraft world and rotating our log files so that they don't fill the servers disk up.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1417537697436,"created_by":1,"updated_at":1425481515093,"updated_by":1,"published_at":null,"published_by":null},{"id":13,"uuid":"1dc91f71-d853-4187-ad13-38953272b6ee","title":"OS detection","slug":"os-detection","markdown":"\n```\n$ echo $OSTYPE\n$ cat /etc/*release\n$ cat /etc/SuSE-release\n$ cat /etc/redhat-release\n$ cat /etc/redhat_version\n$ cat /etc/fedora-release\n$ cat /etc/slackware-release\n$ cat /etc/debian_version\n$ cat /etc/debian-release\n$ cat /etc/sun-release\n$ cat /etc/lsb-release\n$ cat /etc/release\n$ cat /etc/gentoo-release\n$ cat /etc/version\n\n$ lsb_release -a\n$ cat /etc/version (freebsd)\n```\n\n```\ncase \"$OSTYPE\" in\n  solaris*) echo \"SOLARIS\" ;;\n  darwin*)  echo \"OSX\" ;; \n  linux*)   echo \"LINUX\" ;;\n  bsd*)     echo \"BSD\" ;;\n  *)        echo \"unknown: $OSTYPE\" ;;\nesac\n```\n\n```\n# Detect the platform (similar to $OSTYPE)\nOS=\"`uname`\"\ncase $OS in\n  'Linux')\n    OS='Linux'\n    alias ls='ls --color=auto'\n    ;;\n  'FreeBSD')\n    OS='FreeBSD'\n    alias ls='ls -G'\n    ;;\n  'WindowsNT')\n    OS='Windows'\n    ;;\n  'darwin') \n    OS='Mac'\n    ;;\n  'SunOS')\n    OS='Solaris'\n    ;;\n  'AIX') ;;\n  *) ;;\nesac\n```\n\n\n[Reference1](http://stackoverflow.com/questions/394230/detect-the-os-from-a-bash-script)\n\n[Reference2](https://github.com/kenorb/dotfiles)","html":"<pre><code>$ echo $OSTYPE\n$ cat /etc/*release\n$ cat /etc/SuSE-release\n$ cat /etc/redhat-release\n$ cat /etc/redhat_version\n$ cat /etc/fedora-release\n$ cat /etc/slackware-release\n$ cat /etc/debian_version\n$ cat /etc/debian-release\n$ cat /etc/sun-release\n$ cat /etc/lsb-release\n$ cat /etc/release\n$ cat /etc/gentoo-release\n$ cat /etc/version\n\n$ lsb_release -a\n$ cat /etc/version (freebsd)\n</code></pre>\n\n<pre><code>case \"$OSTYPE\" in  \n  solaris*) echo \"SOLARIS\" ;;\n  darwin*)  echo \"OSX\" ;; \n  linux*)   echo \"LINUX\" ;;\n  bsd*)     echo \"BSD\" ;;\n  *)        echo \"unknown: $OSTYPE\" ;;\nesac  \n</code></pre>\n\n<pre><code># Detect the platform (similar to $OSTYPE)\nOS=\"`uname`\"  \ncase $OS in  \n  'Linux')\n    OS='Linux'\n    alias ls='ls --color=auto'\n    ;;\n  'FreeBSD')\n    OS='FreeBSD'\n    alias ls='ls -G'\n    ;;\n  'WindowsNT')\n    OS='Windows'\n    ;;\n  'darwin') \n    OS='Mac'\n    ;;\n  'SunOS')\n    OS='Solaris'\n    ;;\n  'AIX') ;;\n  *) ;;\nesac  \n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/questions/394230/detect-the-os-from-a-bash-script\">Reference1</a></p>\n\n<p><a href=\"https://github.com/kenorb/dotfiles\">Reference2</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1424264518911,"created_by":1,"updated_at":1434527895677,"updated_by":1,"published_at":null,"published_by":null},{"id":14,"uuid":"057a9657-0728-4599-a2b9-7da485b3b597","title":"Minecraft: something something something securing (pt 2)","slug":"minecraft-something-something-something-securing-pt-2","markdown":"## Securing the server\n\n```\nneon@moria:~$ sudo ufw allow ssh\nneon@moria:~$ sudo ufw allow 25565\nneon@moria:~$ sudo ufw enable\nneon@moria:~$ sudo ufw status\nStatus: active\n\nTo                         Action      From\n--                         ------      ----\n22                         ALLOW       Anywhere\n25565                      ALLOW       Anywhere\n22                         ALLOW       Anywhere (v6)\n25565                      ALLOW       Anywhere (v6)\n\n<test ssh>\n```\n\n```\nfail2ban (/etc/fail2ban/jail.conf)\nSSH\nremote root login\nlogrotate\nbackups\n```\n\nReferences: \n[Setting up a server](http://minecraft.gamepedia.com/Tutorials/Setting_up_a_server)","html":"<h2 id=\"securingtheserver\">Securing the server</h2>\n\n<pre><code>neon@moria:~$ sudo ufw allow ssh  \nneon@moria:~$ sudo ufw allow 25565  \nneon@moria:~$ sudo ufw enable  \nneon@moria:~$ sudo ufw status  \nStatus: active\n\nTo                         Action      From  \n--                         ------      ----\n22                         ALLOW       Anywhere  \n25565                      ALLOW       Anywhere  \n22                         ALLOW       Anywhere (v6)  \n25565                      ALLOW       Anywhere (v6)\n\n&lt;test ssh&gt;  \n</code></pre>\n\n<pre><code>fail2ban (/etc/fail2ban/jail.conf)  \nSSH  \nremote root login  \nlogrotate  \nbackups  \n</code></pre>\n\n<p>References: <br />\n<a href=\"http://minecraft.gamepedia.com/Tutorials/Setting_up_a_server\">Setting up a server</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":1425477473527,"created_by":1,"updated_at":1425477473527,"updated_by":1,"published_at":null,"published_by":null}],"users":[{"id":1,"uuid":"648b1614-9af4-4f1c-b21b-08dc1e9b4a03","name":"Neontribe","slug":"heydon","password":"$2a$10$n7iK5lH.VmXh0u5JDxkjmu3Mk/pb0RbXT830ACVQUoYtc1xwCxP7.","email":"support@neontribe.co.uk","image":"/content/images/2015/Jun/neontribe_logo_square.png","cover":null,"bio":"","website":"http://www.neontribe.co.uk","location":"","accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"last_login":null,"created_at":1389698022241,"created_by":1,"updated_at":1434535338081,"updated_by":1}],"roles":[{"id":1,"uuid":"2c204656-c8a2-4151-8452-7956efda81d1","name":"Administrator","description":"Administrators","created_at":1389697797974,"created_by":1,"updated_at":1389697797974,"updated_by":1},{"id":2,"uuid":"b5c7ecea-d375-4ad9-aead-ddd8ba03cdc7","name":"Editor","description":"Editors","created_at":1389697798074,"created_by":1,"updated_at":1389697798074,"updated_by":1},{"id":3,"uuid":"0a431920-994a-45fa-bf61-9afe68db04cb","name":"Author","description":"Authors","created_at":1389697798175,"created_by":1,"updated_at":1389697798175,"updated_by":1}],"roles_users":[{"id":1,"role_id":1,"user_id":1}],"permissions":[{"id":1,"uuid":"980c02b9-a2a9-4848-adb9-0af70dd8c290","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":1389697798268,"created_by":1,"updated_at":1389697798268,"updated_by":1},{"id":2,"uuid":"10e69815-cfc9-4ace-8acb-6183c32f6108","name":"Remove posts","object_type":"post","action_type":"remove","object_id":null,"created_at":1389697798391,"created_by":1,"updated_at":1389697798391,"updated_by":1},{"id":3,"uuid":"34f3024f-d29f-4ba0-96e6-82aa1e56091a","name":"Create posts","object_type":"post","action_type":"create","object_id":null,"created_at":1389697798495,"created_by":1,"updated_at":1389697798495,"updated_by":1}],"permissions_users":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3}],"sessions":[{"id":"SzzImlYsoVXtWHOb39qlZb1k","expires":1434579431462,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2015-06-17T22:17:11.462Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"U9B8EqAscSO7KcIqR8rrBBni\"}"},{"id":"KbIK07QmVnuQAM19g5xxJfme","expires":1434579343654,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2015-06-17T22:15:43.654Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"user\":1,\"_csrfSecret\":\"NYd6are7DrGn1OrmN9H8LudL\"}"},{"id":"xFZp8JgVvQaBoh4jeSpzPJ23","expires":1434578515858,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2015-06-17T22:01:55.858Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"XFHeBGIMm03stDKqsN9q3tUY\"}"},{"id":"UpLFErClZDzIH9yFSF7TEmoz","expires":1434578515884,"sess":"{\"cookie\":{\"originalMaxAge\":43200000,\"expires\":\"2015-06-17T22:01:55.884Z\",\"httpOnly\":true,\"path\":\"/ghost/\"},\"_csrfSecret\":\"nCtDKVtIAHFro5E1A6J5fKCA\"}"}],"settings":[{"id":1,"uuid":"36fc90e0-26ba-4269-948e-3995bf8b1e94","key":"databaseVersion","value":"001","type":"core","created_at":1389697798664,"created_by":1,"updated_at":1389697798664,"updated_by":1},{"id":2,"uuid":"a4946760-fce1-4578-afd1-bb01522211d7","key":"dbHash","value":"844b5b5a-1ac2-4002-9ec9-dd12e3dce1aa","type":"core","created_at":1389697798665,"created_by":1,"updated_at":1389697800525,"updated_by":1},{"id":3,"uuid":"93cf3ec8-ae34-4810-a705-53bd1164e179","key":"nextUpdateCheck","value":"1434613655","type":"core","created_at":1389697798665,"created_by":1,"updated_at":1434527211812,"updated_by":1},{"id":4,"uuid":"9bf7b194-3d13-44c7-8d39-439f853705b8","key":"displayUpdateNotification","value":"true","type":"core","created_at":1389697798667,"created_by":1,"updated_at":1434527211812,"updated_by":1},{"id":5,"uuid":"d09c84ae-1501-4dfd-b1f5-2042026bf6df","key":"title","value":"Neontribe","type":"blog","created_at":1389697798667,"created_by":1,"updated_at":1391160338415,"updated_by":1},{"id":6,"uuid":"b81a5470-99d6-487c-9aad-01aac21aea44","key":"description","value":"Neontribe User Centered Design and Development","type":"blog","created_at":1389697798667,"created_by":1,"updated_at":1391160338416,"updated_by":1},{"id":7,"uuid":"13312413-17a9-424f-b593-ae752d056e50","key":"email","value":"support@neontribe.co.uk","type":"blog","created_at":1389697798667,"created_by":1,"updated_at":1391160338417,"updated_by":1},{"id":8,"uuid":"2150ee58-75c7-4660-bc0a-aa77bde9cf78","key":"logo","value":"/content/images/2014/Jan/neontribe_logo_square.svg","type":"blog","created_at":1389697798669,"created_by":1,"updated_at":1391160338417,"updated_by":1},{"id":9,"uuid":"8732729e-ec89-47ba-9c25-43b30fc3d6c5","key":"cover","value":"","type":"blog","created_at":1389697798672,"created_by":1,"updated_at":1391160338418,"updated_by":1},{"id":10,"uuid":"dbbd6a33-2c6b-4edc-91dc-1b7b43be0440","key":"defaultLang","value":"en_US","type":"blog","created_at":1389697798673,"created_by":1,"updated_at":1391160338419,"updated_by":1},{"id":11,"uuid":"ae8daeb4-ffd0-42c4-994c-bf120109f78a","key":"postsPerPage","value":"6","type":"blog","created_at":1389697798673,"created_by":1,"updated_at":1391160338419,"updated_by":1},{"id":12,"uuid":"e561c15f-3240-46f7-a185-bd8d0ca4cba2","key":"forceI18n","value":"true","type":"blog","created_at":1389697798674,"created_by":1,"updated_at":1391160338420,"updated_by":1},{"id":13,"uuid":"8657c654-4c04-4ff9-b112-72884462f9da","key":"permalinks","value":"/:slug/","type":"blog","created_at":1389697798675,"created_by":1,"updated_at":1391160338420,"updated_by":1},{"id":14,"uuid":"f37292ef-985c-47f9-b4ba-d406a5a401a2","key":"activeTheme","value":"a11y","type":"theme","created_at":1389697798675,"created_by":1,"updated_at":1391160338422,"updated_by":1},{"id":15,"uuid":"485efb5e-9379-4790-879d-a1f6eb1fd243","key":"activePlugins","value":"[]","type":"plugin","created_at":1389697798676,"created_by":1,"updated_at":1389697798676,"updated_by":1},{"id":16,"uuid":"4f63252f-cabe-44b0-b33b-08dbff716a2f","key":"installedPlugins","value":"[]","type":"plugin","created_at":1389697798676,"created_by":1,"updated_at":1434535745666,"updated_by":1}],"tags":[{"id":1,"uuid":"c23e8f35-a111-49ee-836d-cb3a947a4e13","name":"Getting Started","slug":"getting-started","description":null,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":1389697797854,"created_by":1,"updated_at":1389697797854,"updated_by":1}],"posts_tags":[]}}